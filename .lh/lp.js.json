{
    "sourceFile": "lp.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 81,
            "patches": [
                {
                    "date": 1707743801363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1707743863089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,10 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+}\r\n"
                },
                {
                    "date": 1707743997959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function logosSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '2rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  onDomReady(() => {\r\n+    logosSliderInit()\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707744018796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import ScrollTrigger from 'gsap/ScrollTrigger'\r\n import Splide from '@splidejs/splide'\r\n import '@splidejs/splide/css'\r\n import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel } from './utils'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n \r\n export default function lp() {\r\n   console.log('lp')\r\n   function logosSliderInit() {\r\n@@ -31,22 +31,4 @@\n   onDomReady(() => {\r\n     logosSliderInit()\r\n   })\r\n }\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel } from './utils'\r\n-\r\n-export default function lp() {}\r\n"
                },
                {
                    "date": 1707744051227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import gsap from 'gsap'\r\n import ScrollTrigger from 'gsap/ScrollTrigger'\r\n import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n import '@splidejs/splide/css'\r\n import { Intersection } from '@splidejs/splide-extension-intersection'\r\n import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n \r\n"
                },
                {
                    "date": 1707744475102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  onDomReady(() => {\r\n+    heroSliderInit()\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707746987171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747089993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747112995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747119659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747152153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      //   autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747158205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747177634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      fixedWidth: 1.5,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747198912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      fixedWidth: '75%',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747208200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      fixedWidth: '30rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747223353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      fixedWidth: '75%',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747231479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       pagination: false,\r\n       gap: '1.25rem',\r\n       type: 'loop',\r\n       //   autoWidth: true,\r\n-      fixedWidth: '75%',\r\n+      fixedWidth: '5%',\r\n       autoScroll: { speed: 0.6, autoStart: false },\r\n       breakpoints: {\r\n         767: {\r\n           gap: '1.25rem',\r\n@@ -54,561 +54,4 @@\n     slider.mount({ AutoScroll })\r\n   }\r\n   testSliderInit()\r\n }\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      fixedWidth: '30rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      fixedWidth: '75%',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      fixedWidth: 1.5,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      //   autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  onDomReady(() => {\r\n-    heroSliderInit()\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function logosSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '2rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  onDomReady(() => {\r\n-    logosSliderInit()\r\n-  })\r\n-}\r\n"
                },
                {
                    "date": 1707747237681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       pagination: false,\r\n       gap: '1.25rem',\r\n       type: 'loop',\r\n       //   autoWidth: true,\r\n-      fixedWidth: '5%',\r\n+      fixedWidth: '50%',\r\n       autoScroll: { speed: 0.6, autoStart: false },\r\n       breakpoints: {\r\n         767: {\r\n           gap: '1.25rem',\r\n"
                },
                {
                    "date": 1707747468589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      fixedWidth: '50%',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747520948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747707792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747720012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707747727570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+}\r\n"
                },
                {
                    "date": 1707749063156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__item')\r\n+  console.log(timeLineItem$a)\r\n+}\r\n"
                },
                {
                    "date": 1707749197239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__item')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)' }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749211543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     slider.mount({ AutoScroll })\r\n   }\r\n   testSliderInit()\r\n \r\n-  const timeLineItem$a = selAll('.timeline__item')\r\n+  const timeLineItem$a = selAll('.timeline__tag')\r\n   gsap.fromTo(\r\n     [...timeLineItem$a],\r\n     { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n     { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)' }\r\n"
                },
                {
                    "date": 1707749242409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)', duration: 1, stagger: { each: 0.2 } }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749285677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)', duration: 1, stagger: { each: 0.2 } }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749297393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     slider.mount({ AutoScroll })\r\n   }\r\n   testSliderInit()\r\n \r\n-  const timeLineItem$a = selAll('.timeline__tag:not(is--tile')\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n   gsap.fromTo(\r\n     [...timeLineItem$a],\r\n     { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n     { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)', duration: 1, stagger: { each: 0.2 } }\r\n"
                },
                {
                    "date": 1707749350246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)', duration: 1, stagger: { each: 0.2 }, scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749359436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 1,\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n+    }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749703676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 1,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n+    }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749719746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.1 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n+    }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749794634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.1 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 50%' },\r\n+    }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749809499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.1 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749824964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707749834125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.15 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1707750039291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n \r\n import '@splidejs/splide/css'\r\n import { Intersection } from '@splidejs/splide-extension-intersection'\r\n import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n export default function lp() {\r\n   console.log('lp')\r\n   function heroSliderInit() {\r\n     const classPrefix = 'daas-header'\r\n@@ -68,5 +67,13 @@\n       stagger: { each: 0.15 },\r\n       scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n     }\r\n   )\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 100,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.15 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 75%' },\r\n+  })\r\n }\r\n"
                },
                {
                    "date": 1707750059690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.15 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 5,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 75%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707750069577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.15 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 75%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707750093368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n       clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n       duration: 2,\r\n       ease: 'expo.out',\r\n       stagger: { each: 0.15 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n     }\r\n   )\r\n   const benefitItem$a = selAll('.benefits__item')\r\n   gsap.from([...benefitItem$a], {\r\n@@ -74,7 +74,7 @@\n     opacity: 0,\r\n     duration: 2,\r\n     ease: 'expo.out',\r\n     stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 75%' },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n   })\r\n }\r\n"
                },
                {
                    "date": 1707750104650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n+    }\r\n+  )\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707750302443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n       clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n       duration: 2,\r\n       ease: 'expo.out',\r\n       stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n     }\r\n   )\r\n   const benefitItem$a = selAll('.benefits__item')\r\n   gsap.from([...benefitItem$a], {\r\n"
                },
                {
                    "date": 1707750580554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+    }\r\n+  )\r\n+  scrollTriggerInit('10vh', 'timeline__bg')\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707750710685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+    }\r\n+  )\r\n+  scrollTriggerInit('10vh', 'timeline__bg', '', 'from')\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707750753787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+    }\r\n+  )\r\n+  scrollTriggerInit('-10vh', 'timeline__bg', '', 'from')\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707750771196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n       stagger: { each: 0.2 },\r\n       scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n     }\r\n   )\r\n-  scrollTriggerInit('-10vh', 'timeline__bg', '', 'from')\r\n+  scrollTriggerInit('10vh', 'timeline__bg')\r\n \r\n   const benefitItem$a = selAll('.benefits__item')\r\n   gsap.from([...benefitItem$a], {\r\n     y: 50,\r\n"
                },
                {
                    "date": 1707750789510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+    }\r\n+  )\r\n+  scrollTriggerInit('10vh', 'timeline__bg', '', 'to')\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707750980403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,8 @@\n       stagger: { each: 0.2 },\r\n       scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n     }\r\n   )\r\n-  scrollTriggerInit('10vh', 'timeline__bg', '', 'to')\r\n \r\n   const benefitItem$a = selAll('.benefits__item')\r\n   gsap.from([...benefitItem$a], {\r\n     y: 50,\r\n"
                },
                {
                    "date": 1707751231658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707751314294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,11 @@\n       arrows: false,\r\n       pagination: false,\r\n       gap: '1.25rem',\r\n       type: 'loop',\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n       autoWidth: true,\r\n       autoScroll: { speed: 0.6, autoStart: false },\r\n       breakpoints: {\r\n         767: {\r\n"
                },
                {
                    "date": 1707751335875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707751378350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 90%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707751460217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n       clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n       duration: 2,\r\n       ease: 'expo.out',\r\n       stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 50%' },\r\n     }\r\n   )\r\n \r\n   const benefitItem$a = selAll('.benefits__item')\r\n"
                },
                {
                    "date": 1707751479677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 90%' },\r\n+  })\r\n+}\r\n"
                },
                {
                    "date": 1707751607528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 90%' },\r\n+  })\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751638311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 30%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751657863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 30%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751670076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 50%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751684331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751701495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n       clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n       duration: 2,\r\n       ease: 'expo.out',\r\n       stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n     }\r\n   )\r\n \r\n   const benefitItem$a = selAll('.benefits__item')\r\n"
                },
                {
                    "date": 1707751721805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      console.log('asdf')\r\n+\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751732537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751844232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      pauseOnHover: false,\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751857452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      pauseOnHover: false,\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751882838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      pauseOnHover: false,\r\n+      pauseOnFocus: false,\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707751989461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,9 @@\n       pagination: false,\r\n       gap: '1.25rem',\r\n       type: 'loop',\r\n       pauseOnHover: false,\r\n-      pauseOnFocus: false,\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n+      autoScroll: { speed: 0.6, autoStart: false, autoWidth: true },\r\n       breakpoints: {\r\n         767: {\r\n           gap: '1.25rem',\r\n         },\r\n"
                },
                {
                    "date": 1707752003219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,104 +15,10 @@\n       arrows: false,\r\n       pagination: false,\r\n       gap: '1.25rem',\r\n       type: 'loop',\r\n-      pauseOnHover: false,\r\n-      autoScroll: { speed: 0.6, autoStart: false, autoWidth: true },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      pauseOnHover: false,\r\n       autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n       breakpoints: {\r\n         767: {\r\n           gap: '1.25rem',\r\n         },\r\n@@ -184,2842 +90,4 @@\n       ScrollTrigger.refresh()\r\n     }\r\n   }).observe(document.body)\r\n }\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      pauseOnHover: false,\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      console.log('asdf')\r\n-\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 50%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 30%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 30%' },\r\n-  })\r\n-\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 90%' },\r\n-  })\r\n-  let documentHeight = document.body.clientHeight\r\n-  new ResizeObserver((entries) => {\r\n-    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n-    if (newHeight !== documentHeight) {\r\n-      documentHeight = newHeight\r\n-      ScrollTrigger.refresh()\r\n-    }\r\n-  }).observe(document.body)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 40%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 90%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 50%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 90%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      speed: 1500,\r\n-      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-    connectSplideArrows(slider, classPrefix)\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n-    }\r\n-  )\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n-    }\r\n-  )\r\n-  scrollTriggerInit('10vh', 'timeline__bg')\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n-    }\r\n-  )\r\n-  scrollTriggerInit('10vh', 'timeline__bg', '', 'from')\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n-    }\r\n-  )\r\n-  scrollTriggerInit('10vh', 'timeline__bg')\r\n-\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 60%' },\r\n-    }\r\n-  )\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.15 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n-    }\r\n-  )\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 50,\r\n-    opacity: 0,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 80%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.15 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 5,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.1 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 75%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.15 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-  const benefitItem$a = selAll('.benefits__item')\r\n-  gsap.from([...benefitItem$a], {\r\n-    y: 100,\r\n-    duration: 2,\r\n-    ease: 'expo.out',\r\n-    stagger: { each: 0.15 },\r\n-    scrollTrigger: { trigger: '.benefits__list', start: 'top 75%' },\r\n-  })\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.1 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n-    }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.1 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 50%' },\r\n-    }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 2,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.1 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n-    }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 1,\r\n-      ease: 'expo.out',\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n-    }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    {\r\n-      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n-      duration: 1,\r\n-      stagger: { each: 0.2 },\r\n-      scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' },\r\n-    }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)', duration: 1, stagger: { each: 0.2 }, scrollTrigger: { trigger: '.timeline__list', start: 'top 80%' }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)', duration: 1, stagger: { each: 0.2 } }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)', duration: 1, stagger: { each: 0.2 } }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__tag')\r\n-  gsap.fromTo(\r\n-    [...timeLineItem$a],\r\n-    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n-    { clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)' }\r\n-  )\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-\r\n-  const timeLineItem$a = selAll('.timeline__item')\r\n-  console.log(timeLineItem$a)\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      perPage: 2,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      //   fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      fixedWidth: '48rem',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '4rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      fixedWidth: '50%',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n-import gsap from 'gsap'\r\n-import ScrollTrigger from 'gsap/ScrollTrigger'\r\n-import Splide from '@splidejs/splide'\r\n-import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n-\r\n-import '@splidejs/splide/css'\r\n-import { Intersection } from '@splidejs/splide-extension-intersection'\r\n-import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel, splideAutoWidth } from './utils'\r\n-\r\n-export default function lp() {\r\n-  console.log('lp')\r\n-  function heroSliderInit() {\r\n-    const classPrefix = 'daas-header'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      autoWidth: true,\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  heroSliderInit()\r\n-  function testSliderInit() {\r\n-    const classPrefix = 'daas-testimonials'\r\n-    addSplideClasses(classPrefix + '__slider')\r\n-    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-      arrows: false,\r\n-      pagination: false,\r\n-      gap: '1.25rem',\r\n-      type: 'loop',\r\n-      //   autoWidth: true,\r\n-      fixedWidth: '50%',\r\n-      autoScroll: { speed: 0.6, autoStart: false },\r\n-      breakpoints: {\r\n-        767: {\r\n-          gap: '1.25rem',\r\n-        },\r\n-      },\r\n-    })\r\n-\r\n-    //\r\n-    splideAutoWidth(slider)\r\n-    slider.mount({ AutoScroll })\r\n-  }\r\n-  testSliderInit()\r\n-}\r\n"
                },
                {
                    "date": 1707752827233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,18 @@\n     stagger: { each: 0.1 },\r\n     scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n   })\r\n \r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 60%' },\r\n+  })\r\n+\r\n   let documentHeight = document.body.clientHeight\r\n   new ResizeObserver((entries) => {\r\n     const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n     if (newHeight !== documentHeight) {\r\n"
                },
                {
                    "date": 1707752841757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.05 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752849994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.05 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752878904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: -20,\r\n+    opacity: 0,\r\n+    duration: 1,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.05 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752896474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    // x: -20,\r\n+    opacity: 0,\r\n+    duration: 1,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.05 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752927839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 1,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.05 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 80%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752940641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 1,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.02 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 80%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752947620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 1,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.03 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 80%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752956825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.03 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 80%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752967639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    y: 20,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.03 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 80%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752974768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.03 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 80%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707752993869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.03 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 70%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707753009811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.04 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 70%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                },
                {
                    "date": 1707759213632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,104 @@\n+import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n+import Splide from '@splidejs/splide'\r\n+import { AutoScroll } from '@splidejs/splide-extension-auto-scroll'\r\n+\r\n+import '@splidejs/splide/css'\r\n+import { Intersection } from '@splidejs/splide-extension-intersection'\r\n+import { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, scrollTriggerInit, sel, selAll, splideAutoWidth } from './utils'\r\n+export default function lp() {\r\n+  console.log('lp')\r\n+  function heroSliderInit() {\r\n+    const classPrefix = 'daas-header'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '1.25rem',\r\n+      type: 'loop',\r\n+      autoWidth: true,\r\n+      autoScroll: { speed: 0.6, autoStart: false, pauseOnHover: false },\r\n+      breakpoints: {\r\n+        767: {\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    //\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+  }\r\n+  heroSliderInit()\r\n+\r\n+  function testSliderInit() {\r\n+    const classPrefix = 'daas-testimonials'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '4rem',\r\n+      type: 'loop',\r\n+      //   autoWidth: true,\r\n+      perPage: 2,\r\n+      //   fixedWidth: '48rem',\r\n+      autoScroll: { speed: 0.6, autoStart: false },\r\n+      speed: 1500,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+\r\n+      breakpoints: {\r\n+        767: {\r\n+          perPage: 1,\r\n+          gap: '1.25rem',\r\n+        },\r\n+      },\r\n+    })\r\n+\r\n+    splideAutoWidth(slider)\r\n+    slider.mount({ AutoScroll })\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n+  testSliderInit()\r\n+\r\n+  const timeLineItem$a = selAll('.timeline__tag:not(.is--tile')\r\n+  gsap.fromTo(\r\n+    [...timeLineItem$a],\r\n+    { clipPath: 'inset(0px 100% 0px 0px round 0 0.5rem 0.5rem 0)' },\r\n+    {\r\n+      clipPath: 'inset(0px 0% 0px 0px round 0 0.5rem 0.5rem 0)',\r\n+      duration: 2,\r\n+      ease: 'expo.out',\r\n+      stagger: { each: 0.2 },\r\n+      scrollTrigger: { trigger: '.timeline__list', start: 'top 75%' },\r\n+    }\r\n+  )\r\n+\r\n+  const benefitItem$a = selAll('.benefits__item')\r\n+  gsap.from([...benefitItem$a], {\r\n+    y: 50,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.1 },\r\n+    scrollTrigger: { trigger: '.benefits__list', start: 'top 60%' },\r\n+  })\r\n+\r\n+  const serviceItem$a = selAll('.what-we-do__item')\r\n+  gsap.from([...serviceItem$a], {\r\n+    x: 20,\r\n+    opacity: 0,\r\n+    duration: 2,\r\n+    ease: 'expo.out',\r\n+    stagger: { each: 0.04 },\r\n+    scrollTrigger: { trigger: '.what-we-do__list', start: 'top 70%' },\r\n+  })\r\n+\r\n+  let documentHeight = document.body.clientHeight\r\n+  new ResizeObserver((entries) => {\r\n+    const newHeight = entries[0].contentRect.height // only one item [0] - body\r\n+    if (newHeight !== documentHeight) {\r\n+      documentHeight = newHeight\r\n+      ScrollTrigger.refresh()\r\n+    }\r\n+  }).observe(document.body)\r\n+}\r\n"
                }
            ],
            "date": 1707743801363,
            "name": "Commit-0",
            "content": "import gsap from 'gsap'\r\nimport ScrollTrigger from 'gsap/ScrollTrigger'\r\nimport Splide from '@splidejs/splide'\r\nimport '@splidejs/splide/css'\r\nimport { Intersection } from '@splidejs/splide-extension-intersection'\r\nimport { addSplideClasses, connectSplideArrows, connectSplideBullets, onDomReady, sel } from './utils'\r\n\r\nexport default function lp() {}\r\n"
        }
    ]
}