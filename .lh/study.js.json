{
    "sourceFile": "study.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1701728480167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1701728616090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,191 @@\n+export default function deliverablesSlider() {\r\n+  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n+  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n+\r\n+  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n+  const nextBtn = document.querySelector('#nextBtn')\r\n+  const previousBtn = document.querySelector('#previousBtn')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  changeDeliveralesText(slides)\r\n+  // Get the left and right margin values\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderContainer.style.flexDirection = 'row'\r\n+  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n+  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  let currentSlide = 0\r\n+\r\n+  nextBtn.addEventListener('click', function () {\r\n+    if (currentSlide < numSlides - 1) {\r\n+      currentSlide++\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"next\" button when reaching the last slide\r\n+    if (currentSlide === numSlides - 1) {\r\n+      nextBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"previous\" button\r\n+    previousBtn.classList.remove('is--disabled')\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (currentSlide > 0) {\r\n+      currentSlide--\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"previous\" button when reaching the first slide\r\n+    if (currentSlide === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"next\" button\r\n+    nextBtn.classList.remove('is--disabled')\r\n+  })\r\n+}\r\n+\r\n+function changeDeliveralesText(slides) {\r\n+  slides.forEach((slide) => {\r\n+    const altText = slide.querySelector('img').alt\r\n+    let parts = altText.split(' - ')\r\n+    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n+    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n+    if (parts[0] && parts[0].trim() !== '') {\r\n+      galleryTitle.textContent = parts[0].trim()\r\n+    }\r\n+    if (parts[1] && parts[1].trim() !== '') {\r\n+      galleryservice.textContent = parts[1].trim()\r\n+    }\r\n+  })\r\n+}\r\n+\r\n+function sliderWithImage() {\r\n+  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n+  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n+  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n+  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n+  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n+  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderWrapper.style.flexDirection = 'row'\r\n+  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n+  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  const lastSlide = numSlides - 1\r\n+  let slideIndex = 0\r\n+\r\n+  updateButtonStates()\r\n+  addImages()\r\n+  updateImage()\r\n+  function addImages() {\r\n+    // Clear the existing content in sliderImage\r\n+    sliderImage.innerHTML = ''\r\n+\r\n+    // Loop through each slide and add its images to sliderImage\r\n+    slides.forEach((slide, index) => {\r\n+      // Clone the images to avoid moving them from their original position\r\n+      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n+        const clonedImg = img.cloneNode(true)\r\n+        return clonedImg\r\n+      })\r\n+\r\n+      // Append each image to sliderImage\r\n+      images.forEach((image) => {\r\n+        image.classList.add('slider__image')\r\n+        image.classList.remove('slider__image-hidden')\r\n+        sliderImage.appendChild(image)\r\n+      })\r\n+    })\r\n+  }\r\n+\r\n+  function updateImage() {\r\n+    // Get all images within sliderImage\r\n+    const allImages = sliderImage.querySelectorAll('img')\r\n+\r\n+    // Loop through all images and set opacity\r\n+    allImages.forEach((image, index) => {\r\n+      if (index === slideIndex) {\r\n+        // If it's the current image, set opacity to 1\r\n+        gsap.to(image, { opacity: 1 })\r\n+      } else {\r\n+        // If it's not the current image, set opacity to 0\r\n+        gsap.to(image, { opacity: 0 })\r\n+      }\r\n+    })\r\n+  }\r\n+  function goToSlide(index) {\r\n+    slideIndex = index\r\n+    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+\r\n+    // Update button states based on current slide index\r\n+    updateButtonStates()\r\n+    // Update images based on current slide index\r\n+    updateImage()\r\n+  }\r\n+\r\n+  function updateButtonStates() {\r\n+    // Disable/enable buttons based on current slide index\r\n+    if (slideIndex === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    } else if (slideIndex === lastSlide) {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.add('is--disabled')\r\n+    } else {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    }\r\n+  }\r\n+\r\n+  nextBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex < lastSlide) {\r\n+      slideIndex++\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex > 0) {\r\n+      slideIndex--\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+}\r\n+\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n+  let mm = gsap.matchMedia()\r\n+  deliverablesSlider()\r\n+  sliderWithImage()\r\n+  mm.add(\r\n+    {\r\n+      isDesktop: '(min-width: 991px)',\r\n+      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+      isMobile: '(max-width: 477px)',\r\n+    },\r\n+    (context) => {\r\n+      let { isDesktop, isTablet, isMobile } = context.conditions\r\n+\r\n+      if (isDesktop) {\r\n+      }\r\n+      if (isTablet) {\r\n+      }\r\n+      if (isMobile) {\r\n+      }\r\n+\r\n+      return () => {}\r\n+    }\r\n+  )\r\n+})\r\n"
                },
                {
                    "date": 1701730357790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,193 @@\n+import gsap from 'gsap'\r\n+\r\n+export default function deliverablesSlider() {\r\n+  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n+  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n+\r\n+  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n+  const nextBtn = document.querySelector('#nextBtn')\r\n+  const previousBtn = document.querySelector('#previousBtn')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  changeDeliveralesText(slides)\r\n+  // Get the left and right margin values\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderContainer.style.flexDirection = 'row'\r\n+  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n+  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  let currentSlide = 0\r\n+\r\n+  nextBtn.addEventListener('click', function () {\r\n+    if (currentSlide < numSlides - 1) {\r\n+      currentSlide++\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"next\" button when reaching the last slide\r\n+    if (currentSlide === numSlides - 1) {\r\n+      nextBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"previous\" button\r\n+    previousBtn.classList.remove('is--disabled')\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (currentSlide > 0) {\r\n+      currentSlide--\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"previous\" button when reaching the first slide\r\n+    if (currentSlide === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"next\" button\r\n+    nextBtn.classList.remove('is--disabled')\r\n+  })\r\n+}\r\n+\r\n+function changeDeliveralesText(slides) {\r\n+  slides.forEach((slide) => {\r\n+    const altText = slide.querySelector('img').alt\r\n+    let parts = altText.split(' - ')\r\n+    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n+    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n+    if (parts[0] && parts[0].trim() !== '') {\r\n+      galleryTitle.textContent = parts[0].trim()\r\n+    }\r\n+    if (parts[1] && parts[1].trim() !== '') {\r\n+      galleryservice.textContent = parts[1].trim()\r\n+    }\r\n+  })\r\n+}\r\n+\r\n+function sliderWithImage() {\r\n+  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n+  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n+  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n+  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n+  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n+  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderWrapper.style.flexDirection = 'row'\r\n+  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n+  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  const lastSlide = numSlides - 1\r\n+  let slideIndex = 0\r\n+\r\n+  updateButtonStates()\r\n+  addImages()\r\n+  updateImage()\r\n+  function addImages() {\r\n+    // Clear the existing content in sliderImage\r\n+    sliderImage.innerHTML = ''\r\n+\r\n+    // Loop through each slide and add its images to sliderImage\r\n+    slides.forEach((slide, index) => {\r\n+      // Clone the images to avoid moving them from their original position\r\n+      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n+        const clonedImg = img.cloneNode(true)\r\n+        return clonedImg\r\n+      })\r\n+\r\n+      // Append each image to sliderImage\r\n+      images.forEach((image) => {\r\n+        image.classList.add('slider__image')\r\n+        image.classList.remove('slider__image-hidden')\r\n+        sliderImage.appendChild(image)\r\n+      })\r\n+    })\r\n+  }\r\n+\r\n+  function updateImage() {\r\n+    // Get all images within sliderImage\r\n+    const allImages = sliderImage.querySelectorAll('img')\r\n+\r\n+    // Loop through all images and set opacity\r\n+    allImages.forEach((image, index) => {\r\n+      if (index === slideIndex) {\r\n+        // If it's the current image, set opacity to 1\r\n+        gsap.to(image, { opacity: 1 })\r\n+      } else {\r\n+        // If it's not the current image, set opacity to 0\r\n+        gsap.to(image, { opacity: 0 })\r\n+      }\r\n+    })\r\n+  }\r\n+  function goToSlide(index) {\r\n+    slideIndex = index\r\n+    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+\r\n+    // Update button states based on current slide index\r\n+    updateButtonStates()\r\n+    // Update images based on current slide index\r\n+    updateImage()\r\n+  }\r\n+\r\n+  function updateButtonStates() {\r\n+    // Disable/enable buttons based on current slide index\r\n+    if (slideIndex === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    } else if (slideIndex === lastSlide) {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.add('is--disabled')\r\n+    } else {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    }\r\n+  }\r\n+\r\n+  nextBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex < lastSlide) {\r\n+      slideIndex++\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex > 0) {\r\n+      slideIndex--\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+}\r\n+\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n+  let mm = gsap.matchMedia()\r\n+  deliverablesSlider()\r\n+  sliderWithImage()\r\n+  mm.add(\r\n+    {\r\n+      isDesktop: '(min-width: 991px)',\r\n+      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+      isMobile: '(max-width: 477px)',\r\n+    },\r\n+    (context) => {\r\n+      let { isDesktop, isTablet, isMobile } = context.conditions\r\n+\r\n+      if (isDesktop) {\r\n+      }\r\n+      if (isTablet) {\r\n+      }\r\n+      if (isMobile) {\r\n+      }\r\n+\r\n+      return () => {}\r\n+    }\r\n+  )\r\n+})\r\n"
                },
                {
                    "date": 1701730382981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,195 @@\n+import gsap from 'gsap'\r\n+\r\n+export default function deliverablesSlider() {\r\n+  console.log('ffff')\r\n+\r\n+  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n+  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n+\r\n+  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n+  const nextBtn = document.querySelector('#nextBtn')\r\n+  const previousBtn = document.querySelector('#previousBtn')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  changeDeliveralesText(slides)\r\n+  // Get the left and right margin values\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderContainer.style.flexDirection = 'row'\r\n+  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n+  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  let currentSlide = 0\r\n+\r\n+  nextBtn.addEventListener('click', function () {\r\n+    if (currentSlide < numSlides - 1) {\r\n+      currentSlide++\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"next\" button when reaching the last slide\r\n+    if (currentSlide === numSlides - 1) {\r\n+      nextBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"previous\" button\r\n+    previousBtn.classList.remove('is--disabled')\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (currentSlide > 0) {\r\n+      currentSlide--\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"previous\" button when reaching the first slide\r\n+    if (currentSlide === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"next\" button\r\n+    nextBtn.classList.remove('is--disabled')\r\n+  })\r\n+}\r\n+\r\n+function changeDeliveralesText(slides) {\r\n+  slides.forEach((slide) => {\r\n+    const altText = slide.querySelector('img').alt\r\n+    let parts = altText.split(' - ')\r\n+    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n+    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n+    if (parts[0] && parts[0].trim() !== '') {\r\n+      galleryTitle.textContent = parts[0].trim()\r\n+    }\r\n+    if (parts[1] && parts[1].trim() !== '') {\r\n+      galleryservice.textContent = parts[1].trim()\r\n+    }\r\n+  })\r\n+}\r\n+\r\n+function sliderWithImage() {\r\n+  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n+  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n+  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n+  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n+  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n+  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderWrapper.style.flexDirection = 'row'\r\n+  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n+  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  const lastSlide = numSlides - 1\r\n+  let slideIndex = 0\r\n+\r\n+  updateButtonStates()\r\n+  addImages()\r\n+  updateImage()\r\n+  function addImages() {\r\n+    // Clear the existing content in sliderImage\r\n+    sliderImage.innerHTML = ''\r\n+\r\n+    // Loop through each slide and add its images to sliderImage\r\n+    slides.forEach((slide, index) => {\r\n+      // Clone the images to avoid moving them from their original position\r\n+      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n+        const clonedImg = img.cloneNode(true)\r\n+        return clonedImg\r\n+      })\r\n+\r\n+      // Append each image to sliderImage\r\n+      images.forEach((image) => {\r\n+        image.classList.add('slider__image')\r\n+        image.classList.remove('slider__image-hidden')\r\n+        sliderImage.appendChild(image)\r\n+      })\r\n+    })\r\n+  }\r\n+\r\n+  function updateImage() {\r\n+    // Get all images within sliderImage\r\n+    const allImages = sliderImage.querySelectorAll('img')\r\n+\r\n+    // Loop through all images and set opacity\r\n+    allImages.forEach((image, index) => {\r\n+      if (index === slideIndex) {\r\n+        // If it's the current image, set opacity to 1\r\n+        gsap.to(image, { opacity: 1 })\r\n+      } else {\r\n+        // If it's not the current image, set opacity to 0\r\n+        gsap.to(image, { opacity: 0 })\r\n+      }\r\n+    })\r\n+  }\r\n+  function goToSlide(index) {\r\n+    slideIndex = index\r\n+    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+\r\n+    // Update button states based on current slide index\r\n+    updateButtonStates()\r\n+    // Update images based on current slide index\r\n+    updateImage()\r\n+  }\r\n+\r\n+  function updateButtonStates() {\r\n+    // Disable/enable buttons based on current slide index\r\n+    if (slideIndex === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    } else if (slideIndex === lastSlide) {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.add('is--disabled')\r\n+    } else {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    }\r\n+  }\r\n+\r\n+  nextBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex < lastSlide) {\r\n+      slideIndex++\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex > 0) {\r\n+      slideIndex--\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+}\r\n+\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n+  let mm = gsap.matchMedia()\r\n+  deliverablesSlider()\r\n+  sliderWithImage()\r\n+  mm.add(\r\n+    {\r\n+      isDesktop: '(min-width: 991px)',\r\n+      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+      isMobile: '(max-width: 477px)',\r\n+    },\r\n+    (context) => {\r\n+      let { isDesktop, isTablet, isMobile } = context.conditions\r\n+\r\n+      if (isDesktop) {\r\n+      }\r\n+      if (isTablet) {\r\n+      }\r\n+      if (isMobile) {\r\n+      }\r\n+\r\n+      return () => {}\r\n+    }\r\n+  )\r\n+})\r\n"
                },
                {
                    "date": 1701730552914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,193 @@\n+import gsap from 'gsap'\r\n+\r\n+export default function deliverablesSlider() {\r\n+  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n+  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n+\r\n+  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n+  const nextBtn = document.querySelector('#nextBtn')\r\n+  const previousBtn = document.querySelector('#previousBtn')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  changeDeliveralesText(slides)\r\n+  // Get the left and right margin values\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderContainer.style.flexDirection = 'row'\r\n+  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n+  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  let currentSlide = 0\r\n+\r\n+  nextBtn.addEventListener('click', function () {\r\n+    if (currentSlide < numSlides - 1) {\r\n+      currentSlide++\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"next\" button when reaching the last slide\r\n+    if (currentSlide === numSlides - 1) {\r\n+      nextBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"previous\" button\r\n+    previousBtn.classList.remove('is--disabled')\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (currentSlide > 0) {\r\n+      currentSlide--\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"previous\" button when reaching the first slide\r\n+    if (currentSlide === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"next\" button\r\n+    nextBtn.classList.remove('is--disabled')\r\n+  })\r\n+}\r\n+\r\n+function changeDeliveralesText(slides) {\r\n+  slides.forEach((slide) => {\r\n+    const altText = slide.querySelector('img').alt\r\n+    let parts = altText.split(' - ')\r\n+    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n+    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n+    if (parts[0] && parts[0].trim() !== '') {\r\n+      galleryTitle.textContent = parts[0].trim()\r\n+    }\r\n+    if (parts[1] && parts[1].trim() !== '') {\r\n+      galleryservice.textContent = parts[1].trim()\r\n+    }\r\n+  })\r\n+}\r\n+\r\n+function sliderWithImage() {\r\n+  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n+  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n+  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n+  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n+  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n+  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderWrapper.style.flexDirection = 'row'\r\n+  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n+  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  const lastSlide = numSlides - 1\r\n+  let slideIndex = 0\r\n+\r\n+  updateButtonStates()\r\n+  addImages()\r\n+  updateImage()\r\n+  function addImages() {\r\n+    // Clear the existing content in sliderImage\r\n+    sliderImage.innerHTML = ''\r\n+\r\n+    // Loop through each slide and add its images to sliderImage\r\n+    slides.forEach((slide, index) => {\r\n+      // Clone the images to avoid moving them from their original position\r\n+      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n+        const clonedImg = img.cloneNode(true)\r\n+        return clonedImg\r\n+      })\r\n+\r\n+      // Append each image to sliderImage\r\n+      images.forEach((image) => {\r\n+        image.classList.add('slider__image')\r\n+        image.classList.remove('slider__image-hidden')\r\n+        sliderImage.appendChild(image)\r\n+      })\r\n+    })\r\n+  }\r\n+\r\n+  function updateImage() {\r\n+    // Get all images within sliderImage\r\n+    const allImages = sliderImage.querySelectorAll('img')\r\n+\r\n+    // Loop through all images and set opacity\r\n+    allImages.forEach((image, index) => {\r\n+      if (index === slideIndex) {\r\n+        // If it's the current image, set opacity to 1\r\n+        gsap.to(image, { opacity: 1 })\r\n+      } else {\r\n+        // If it's not the current image, set opacity to 0\r\n+        gsap.to(image, { opacity: 0 })\r\n+      }\r\n+    })\r\n+  }\r\n+  function goToSlide(index) {\r\n+    slideIndex = index\r\n+    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+\r\n+    // Update button states based on current slide index\r\n+    updateButtonStates()\r\n+    // Update images based on current slide index\r\n+    updateImage()\r\n+  }\r\n+\r\n+  function updateButtonStates() {\r\n+    // Disable/enable buttons based on current slide index\r\n+    if (slideIndex === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    } else if (slideIndex === lastSlide) {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.add('is--disabled')\r\n+    } else {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    }\r\n+  }\r\n+\r\n+  nextBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex < lastSlide) {\r\n+      slideIndex++\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex > 0) {\r\n+      slideIndex--\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+}\r\n+\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n+  let mm = gsap.matchMedia()\r\n+  deliverablesSlider()\r\n+  sliderWithImage()\r\n+  mm.add(\r\n+    {\r\n+      isDesktop: '(min-width: 991px)',\r\n+      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+      isMobile: '(max-width: 477px)',\r\n+    },\r\n+    (context) => {\r\n+      let { isDesktop, isTablet, isMobile } = context.conditions\r\n+\r\n+      if (isDesktop) {\r\n+      }\r\n+      if (isTablet) {\r\n+      }\r\n+      if (isMobile) {\r\n+      }\r\n+\r\n+      return () => {}\r\n+    }\r\n+  )\r\n+})\r\n"
                },
                {
                    "date": 1701730576954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,195 @@\n+import gsap from 'gsap'\r\n+\r\n+export default function deliverablesSlider() {\r\n+  console.log('asdfasdf')\r\n+\r\n+  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n+  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n+\r\n+  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n+  const nextBtn = document.querySelector('#nextBtn')\r\n+  const previousBtn = document.querySelector('#previousBtn')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  changeDeliveralesText(slides)\r\n+  // Get the left and right margin values\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderContainer.style.flexDirection = 'row'\r\n+  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n+  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  let currentSlide = 0\r\n+\r\n+  nextBtn.addEventListener('click', function () {\r\n+    if (currentSlide < numSlides - 1) {\r\n+      currentSlide++\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"next\" button when reaching the last slide\r\n+    if (currentSlide === numSlides - 1) {\r\n+      nextBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"previous\" button\r\n+    previousBtn.classList.remove('is--disabled')\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (currentSlide > 0) {\r\n+      currentSlide--\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"previous\" button when reaching the first slide\r\n+    if (currentSlide === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"next\" button\r\n+    nextBtn.classList.remove('is--disabled')\r\n+  })\r\n+}\r\n+\r\n+function changeDeliveralesText(slides) {\r\n+  slides.forEach((slide) => {\r\n+    const altText = slide.querySelector('img').alt\r\n+    let parts = altText.split(' - ')\r\n+    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n+    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n+    if (parts[0] && parts[0].trim() !== '') {\r\n+      galleryTitle.textContent = parts[0].trim()\r\n+    }\r\n+    if (parts[1] && parts[1].trim() !== '') {\r\n+      galleryservice.textContent = parts[1].trim()\r\n+    }\r\n+  })\r\n+}\r\n+\r\n+function sliderWithImage() {\r\n+  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n+  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n+  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n+  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n+  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n+  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderWrapper.style.flexDirection = 'row'\r\n+  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n+  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  const lastSlide = numSlides - 1\r\n+  let slideIndex = 0\r\n+\r\n+  updateButtonStates()\r\n+  addImages()\r\n+  updateImage()\r\n+  function addImages() {\r\n+    // Clear the existing content in sliderImage\r\n+    sliderImage.innerHTML = ''\r\n+\r\n+    // Loop through each slide and add its images to sliderImage\r\n+    slides.forEach((slide, index) => {\r\n+      // Clone the images to avoid moving them from their original position\r\n+      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n+        const clonedImg = img.cloneNode(true)\r\n+        return clonedImg\r\n+      })\r\n+\r\n+      // Append each image to sliderImage\r\n+      images.forEach((image) => {\r\n+        image.classList.add('slider__image')\r\n+        image.classList.remove('slider__image-hidden')\r\n+        sliderImage.appendChild(image)\r\n+      })\r\n+    })\r\n+  }\r\n+\r\n+  function updateImage() {\r\n+    // Get all images within sliderImage\r\n+    const allImages = sliderImage.querySelectorAll('img')\r\n+\r\n+    // Loop through all images and set opacity\r\n+    allImages.forEach((image, index) => {\r\n+      if (index === slideIndex) {\r\n+        // If it's the current image, set opacity to 1\r\n+        gsap.to(image, { opacity: 1 })\r\n+      } else {\r\n+        // If it's not the current image, set opacity to 0\r\n+        gsap.to(image, { opacity: 0 })\r\n+      }\r\n+    })\r\n+  }\r\n+  function goToSlide(index) {\r\n+    slideIndex = index\r\n+    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+\r\n+    // Update button states based on current slide index\r\n+    updateButtonStates()\r\n+    // Update images based on current slide index\r\n+    updateImage()\r\n+  }\r\n+\r\n+  function updateButtonStates() {\r\n+    // Disable/enable buttons based on current slide index\r\n+    if (slideIndex === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    } else if (slideIndex === lastSlide) {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.add('is--disabled')\r\n+    } else {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    }\r\n+  }\r\n+\r\n+  nextBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex < lastSlide) {\r\n+      slideIndex++\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex > 0) {\r\n+      slideIndex--\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+}\r\n+\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n+  let mm = gsap.matchMedia()\r\n+  deliverablesSlider()\r\n+  sliderWithImage()\r\n+  mm.add(\r\n+    {\r\n+      isDesktop: '(min-width: 991px)',\r\n+      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+      isMobile: '(max-width: 477px)',\r\n+    },\r\n+    (context) => {\r\n+      let { isDesktop, isTablet, isMobile } = context.conditions\r\n+\r\n+      if (isDesktop) {\r\n+      }\r\n+      if (isTablet) {\r\n+      }\r\n+      if (isMobile) {\r\n+      }\r\n+\r\n+      return () => {}\r\n+    }\r\n+  )\r\n+})\r\n"
                },
                {
                    "date": 1701730770022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,197 @@\n+import gsap from 'gsap'\r\n+\r\n+export default function deliverablesSlider() {\r\n+  //   console.log('asdfasdf')\r\n+\r\n+  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n+  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n+\r\n+  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n+  const nextBtn = document.querySelector('#nextBtn')\r\n+  const previousBtn = document.querySelector('#previousBtn')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  changeDeliveralesText(slides)\r\n+  // Get the left and right margin values\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderContainer.style.flexDirection = 'row'\r\n+  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n+  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  let currentSlide = 0\r\n+\r\n+  nextBtn.addEventListener('click', function () {\r\n+    if (currentSlide < numSlides - 1) {\r\n+      currentSlide++\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"next\" button when reaching the last slide\r\n+    if (currentSlide === numSlides - 1) {\r\n+      nextBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"previous\" button\r\n+    previousBtn.classList.remove('is--disabled')\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (currentSlide > 0) {\r\n+      currentSlide--\r\n+      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n+    }\r\n+\r\n+    // Disable the \"previous\" button when reaching the first slide\r\n+    if (currentSlide === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+    }\r\n+\r\n+    // Enable the \"next\" button\r\n+    nextBtn.classList.remove('is--disabled')\r\n+  })\r\n+}\r\n+\r\n+function changeDeliveralesText(slides) {\r\n+  slides.forEach((slide) => {\r\n+    const altText = slide.querySelector('img').alt\r\n+    let parts = altText.split(' - ')\r\n+    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n+    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n+    if (parts[0] && parts[0].trim() !== '') {\r\n+      galleryTitle.textContent = parts[0].trim()\r\n+    }\r\n+    if (parts[1] && parts[1].trim() !== '') {\r\n+      galleryservice.textContent = parts[1].trim()\r\n+    }\r\n+  })\r\n+}\r\n+\r\n+function sliderWithImage() {\r\n+  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n+  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n+  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n+  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n+  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n+  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n+  const slideWidth = slides[0].offsetWidth\r\n+\r\n+  const computedStyle = window.getComputedStyle(slides[0])\r\n+  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n+  const totalWidthOfSlides = slideWidth + marginRight\r\n+  sliderWrapper.style.flexDirection = 'row'\r\n+  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n+  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n+  const numSlides = slides.length\r\n+  const lastSlide = numSlides - 1\r\n+  let slideIndex = 0\r\n+\r\n+  updateButtonStates()\r\n+  addImages()\r\n+  updateImage()\r\n+  function addImages() {\r\n+    // Clear the existing content in sliderImage\r\n+    sliderImage.innerHTML = ''\r\n+\r\n+    // Loop through each slide and add its images to sliderImage\r\n+    slides.forEach((slide, index) => {\r\n+      // Clone the images to avoid moving them from their original position\r\n+      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n+        const clonedImg = img.cloneNode(true)\r\n+        return clonedImg\r\n+      })\r\n+\r\n+      // Append each image to sliderImage\r\n+      images.forEach((image) => {\r\n+        image.classList.add('slider__image')\r\n+        image.classList.remove('slider__image-hidden')\r\n+        sliderImage.appendChild(image)\r\n+      })\r\n+    })\r\n+  }\r\n+\r\n+  function updateImage() {\r\n+    // Get all images within sliderImage\r\n+    const allImages = sliderImage.querySelectorAll('img')\r\n+\r\n+    // Loop through all images and set opacity\r\n+    allImages.forEach((image, index) => {\r\n+      if (index === slideIndex) {\r\n+        // If it's the current image, set opacity to 1\r\n+        gsap.to(image, { opacity: 1 })\r\n+      } else {\r\n+        // If it's not the current image, set opacity to 0\r\n+        gsap.to(image, { opacity: 0 })\r\n+      }\r\n+    })\r\n+  }\r\n+  function goToSlide(index) {\r\n+    slideIndex = index\r\n+    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+\r\n+    // Update button states based on current slide index\r\n+    updateButtonStates()\r\n+    // Update images based on current slide index\r\n+    updateImage()\r\n+  }\r\n+\r\n+  function updateButtonStates() {\r\n+    // Disable/enable buttons based on current slide index\r\n+    if (slideIndex === 0) {\r\n+      previousBtn.classList.add('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    } else if (slideIndex === lastSlide) {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.add('is--disabled')\r\n+    } else {\r\n+      previousBtn.classList.remove('is--disabled')\r\n+      nextBtn.classList.remove('is--disabled')\r\n+    }\r\n+  }\r\n+\r\n+  nextBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex < lastSlide) {\r\n+      slideIndex++\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+\r\n+  previousBtn.addEventListener('pointerdown', function () {\r\n+    if (slideIndex > 0) {\r\n+      slideIndex--\r\n+      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n+      updateImage()\r\n+    }\r\n+    updateButtonStates()\r\n+  })\r\n+}\r\n+\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n+  console.log('loaded')\r\n+\r\n+  let mm = gsap.matchMedia()\r\n+  deliverablesSlider()\r\n+  sliderWithImage()\r\n+  mm.add(\r\n+    {\r\n+      isDesktop: '(min-width: 991px)',\r\n+      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+      isMobile: '(max-width: 477px)',\r\n+    },\r\n+    (context) => {\r\n+      let { isDesktop, isTablet, isMobile } = context.conditions\r\n+\r\n+      if (isDesktop) {\r\n+      }\r\n+      if (isTablet) {\r\n+      }\r\n+      if (isMobile) {\r\n+      }\r\n+\r\n+      return () => {}\r\n+    }\r\n+  )\r\n+})\r\n"
                },
                {
                    "date": 1701730898151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,206 +168,19 @@\n     updateButtonStates()\r\n   })\r\n }\r\n \r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  console.log('loaded')\r\n \r\n-  let mm = gsap.matchMedia()\r\n-  deliverablesSlider()\r\n-  sliderWithImage()\r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-      }\r\n-      if (isTablet) {\r\n-      }\r\n-      if (isMobile) {\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n-import gsap from 'gsap'\r\n-\r\n-export default function deliverablesSlider() {\r\n-  console.log('asdfasdf')\r\n-\r\n-  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n-  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n-\r\n-  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n-  const nextBtn = document.querySelector('#nextBtn')\r\n-  const previousBtn = document.querySelector('#previousBtn')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  changeDeliveralesText(slides)\r\n-  // Get the left and right margin values\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderContainer.style.flexDirection = 'row'\r\n-  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n-  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  let currentSlide = 0\r\n-\r\n-  nextBtn.addEventListener('click', function () {\r\n-    if (currentSlide < numSlides - 1) {\r\n-      currentSlide++\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"next\" button when reaching the last slide\r\n-    if (currentSlide === numSlides - 1) {\r\n-      nextBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"previous\" button\r\n-    previousBtn.classList.remove('is--disabled')\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (currentSlide > 0) {\r\n-      currentSlide--\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"previous\" button when reaching the first slide\r\n-    if (currentSlide === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"next\" button\r\n-    nextBtn.classList.remove('is--disabled')\r\n-  })\r\n-}\r\n-\r\n-function changeDeliveralesText(slides) {\r\n-  slides.forEach((slide) => {\r\n-    const altText = slide.querySelector('img').alt\r\n-    let parts = altText.split(' - ')\r\n-    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n-    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n-    if (parts[0] && parts[0].trim() !== '') {\r\n-      galleryTitle.textContent = parts[0].trim()\r\n-    }\r\n-    if (parts[1] && parts[1].trim() !== '') {\r\n-      galleryservice.textContent = parts[1].trim()\r\n-    }\r\n-  })\r\n-}\r\n-\r\n-function sliderWithImage() {\r\n-  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n-  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n-  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n-  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n-  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n-  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderWrapper.style.flexDirection = 'row'\r\n-  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n-  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  const lastSlide = numSlides - 1\r\n-  let slideIndex = 0\r\n-\r\n-  updateButtonStates()\r\n-  addImages()\r\n-  updateImage()\r\n-  function addImages() {\r\n-    // Clear the existing content in sliderImage\r\n-    sliderImage.innerHTML = ''\r\n-\r\n-    // Loop through each slide and add its images to sliderImage\r\n-    slides.forEach((slide, index) => {\r\n-      // Clone the images to avoid moving them from their original position\r\n-      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n-        const clonedImg = img.cloneNode(true)\r\n-        return clonedImg\r\n-      })\r\n-\r\n-      // Append each image to sliderImage\r\n-      images.forEach((image) => {\r\n-        image.classList.add('slider__image')\r\n-        image.classList.remove('slider__image-hidden')\r\n-        sliderImage.appendChild(image)\r\n-      })\r\n+ if (document.readyState !== 'loading') {\r\n+    initCode()\r\n+  } else {\r\n+    document.addEventListener('DOMContentLoaded', function () {\r\n+      initCode()\r\n     })\r\n   }\r\n+  function initCode() {\r\n+        \r\n \r\n-  function updateImage() {\r\n-    // Get all images within sliderImage\r\n-    const allImages = sliderImage.querySelectorAll('img')\r\n-\r\n-    // Loop through all images and set opacity\r\n-    allImages.forEach((image, index) => {\r\n-      if (index === slideIndex) {\r\n-        // If it's the current image, set opacity to 1\r\n-        gsap.to(image, { opacity: 1 })\r\n-      } else {\r\n-        // If it's not the current image, set opacity to 0\r\n-        gsap.to(image, { opacity: 0 })\r\n-      }\r\n-    })\r\n-  }\r\n-  function goToSlide(index) {\r\n-    slideIndex = index\r\n-    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-\r\n-    // Update button states based on current slide index\r\n-    updateButtonStates()\r\n-    // Update images based on current slide index\r\n-    updateImage()\r\n-  }\r\n-\r\n-  function updateButtonStates() {\r\n-    // Disable/enable buttons based on current slide index\r\n-    if (slideIndex === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    } else if (slideIndex === lastSlide) {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.add('is--disabled')\r\n-    } else {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    }\r\n-  }\r\n-\r\n-  nextBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex < lastSlide) {\r\n-      slideIndex++\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex > 0) {\r\n-      slideIndex--\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-}\r\n-\r\n-document.addEventListener('DOMContentLoaded', function () {\r\n   let mm = gsap.matchMedia()\r\n   deliverablesSlider()\r\n   sliderWithImage()\r\n   mm.add(\r\n@@ -388,968 +201,8 @@\n \r\n       return () => {}\r\n     }\r\n   )\r\n-})\r\n-import gsap from 'gsap'\r\n \r\n-export default function deliverablesSlider() {\r\n-  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n-  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n-\r\n-  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n-  const nextBtn = document.querySelector('#nextBtn')\r\n-  const previousBtn = document.querySelector('#previousBtn')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  changeDeliveralesText(slides)\r\n-  // Get the left and right margin values\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderContainer.style.flexDirection = 'row'\r\n-  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n-  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  let currentSlide = 0\r\n-\r\n-  nextBtn.addEventListener('click', function () {\r\n-    if (currentSlide < numSlides - 1) {\r\n-      currentSlide++\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"next\" button when reaching the last slide\r\n-    if (currentSlide === numSlides - 1) {\r\n-      nextBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"previous\" button\r\n-    previousBtn.classList.remove('is--disabled')\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (currentSlide > 0) {\r\n-      currentSlide--\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"previous\" button when reaching the first slide\r\n-    if (currentSlide === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"next\" button\r\n-    nextBtn.classList.remove('is--disabled')\r\n-  })\r\n-}\r\n-\r\n-function changeDeliveralesText(slides) {\r\n-  slides.forEach((slide) => {\r\n-    const altText = slide.querySelector('img').alt\r\n-    let parts = altText.split(' - ')\r\n-    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n-    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n-    if (parts[0] && parts[0].trim() !== '') {\r\n-      galleryTitle.textContent = parts[0].trim()\r\n-    }\r\n-    if (parts[1] && parts[1].trim() !== '') {\r\n-      galleryservice.textContent = parts[1].trim()\r\n-    }\r\n-  })\r\n-}\r\n-\r\n-function sliderWithImage() {\r\n-  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n-  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n-  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n-  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n-  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n-  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderWrapper.style.flexDirection = 'row'\r\n-  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n-  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  const lastSlide = numSlides - 1\r\n-  let slideIndex = 0\r\n-\r\n-  updateButtonStates()\r\n-  addImages()\r\n-  updateImage()\r\n-  function addImages() {\r\n-    // Clear the existing content in sliderImage\r\n-    sliderImage.innerHTML = ''\r\n-\r\n-    // Loop through each slide and add its images to sliderImage\r\n-    slides.forEach((slide, index) => {\r\n-      // Clone the images to avoid moving them from their original position\r\n-      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n-        const clonedImg = img.cloneNode(true)\r\n-        return clonedImg\r\n-      })\r\n-\r\n-      // Append each image to sliderImage\r\n-      images.forEach((image) => {\r\n-        image.classList.add('slider__image')\r\n-        image.classList.remove('slider__image-hidden')\r\n-        sliderImage.appendChild(image)\r\n-      })\r\n-    })\r\n   }\r\n \r\n-  function updateImage() {\r\n-    // Get all images within sliderImage\r\n-    const allImages = sliderImage.querySelectorAll('img')\r\n-\r\n-    // Loop through all images and set opacity\r\n-    allImages.forEach((image, index) => {\r\n-      if (index === slideIndex) {\r\n-        // If it's the current image, set opacity to 1\r\n-        gsap.to(image, { opacity: 1 })\r\n-      } else {\r\n-        // If it's not the current image, set opacity to 0\r\n-        gsap.to(image, { opacity: 0 })\r\n-      }\r\n-    })\r\n-  }\r\n-  function goToSlide(index) {\r\n-    slideIndex = index\r\n-    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-\r\n-    // Update button states based on current slide index\r\n-    updateButtonStates()\r\n-    // Update images based on current slide index\r\n-    updateImage()\r\n-  }\r\n-\r\n-  function updateButtonStates() {\r\n-    // Disable/enable buttons based on current slide index\r\n-    if (slideIndex === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    } else if (slideIndex === lastSlide) {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.add('is--disabled')\r\n-    } else {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    }\r\n-  }\r\n-\r\n-  nextBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex < lastSlide) {\r\n-      slideIndex++\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex > 0) {\r\n-      slideIndex--\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-}\r\n-\r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  let mm = gsap.matchMedia()\r\n-  deliverablesSlider()\r\n-  sliderWithImage()\r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-      }\r\n-      if (isTablet) {\r\n-      }\r\n-      if (isMobile) {\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n-import gsap from 'gsap'\r\n-\r\n-export default function deliverablesSlider() {\r\n-  console.log('ffff')\r\n-\r\n-  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n-  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n-\r\n-  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n-  const nextBtn = document.querySelector('#nextBtn')\r\n-  const previousBtn = document.querySelector('#previousBtn')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  changeDeliveralesText(slides)\r\n-  // Get the left and right margin values\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderContainer.style.flexDirection = 'row'\r\n-  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n-  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  let currentSlide = 0\r\n-\r\n-  nextBtn.addEventListener('click', function () {\r\n-    if (currentSlide < numSlides - 1) {\r\n-      currentSlide++\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"next\" button when reaching the last slide\r\n-    if (currentSlide === numSlides - 1) {\r\n-      nextBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"previous\" button\r\n-    previousBtn.classList.remove('is--disabled')\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (currentSlide > 0) {\r\n-      currentSlide--\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"previous\" button when reaching the first slide\r\n-    if (currentSlide === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"next\" button\r\n-    nextBtn.classList.remove('is--disabled')\r\n-  })\r\n-}\r\n-\r\n-function changeDeliveralesText(slides) {\r\n-  slides.forEach((slide) => {\r\n-    const altText = slide.querySelector('img').alt\r\n-    let parts = altText.split(' - ')\r\n-    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n-    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n-    if (parts[0] && parts[0].trim() !== '') {\r\n-      galleryTitle.textContent = parts[0].trim()\r\n-    }\r\n-    if (parts[1] && parts[1].trim() !== '') {\r\n-      galleryservice.textContent = parts[1].trim()\r\n-    }\r\n-  })\r\n-}\r\n-\r\n-function sliderWithImage() {\r\n-  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n-  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n-  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n-  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n-  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n-  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderWrapper.style.flexDirection = 'row'\r\n-  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n-  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  const lastSlide = numSlides - 1\r\n-  let slideIndex = 0\r\n-\r\n-  updateButtonStates()\r\n-  addImages()\r\n-  updateImage()\r\n-  function addImages() {\r\n-    // Clear the existing content in sliderImage\r\n-    sliderImage.innerHTML = ''\r\n-\r\n-    // Loop through each slide and add its images to sliderImage\r\n-    slides.forEach((slide, index) => {\r\n-      // Clone the images to avoid moving them from their original position\r\n-      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n-        const clonedImg = img.cloneNode(true)\r\n-        return clonedImg\r\n-      })\r\n-\r\n-      // Append each image to sliderImage\r\n-      images.forEach((image) => {\r\n-        image.classList.add('slider__image')\r\n-        image.classList.remove('slider__image-hidden')\r\n-        sliderImage.appendChild(image)\r\n-      })\r\n-    })\r\n-  }\r\n-\r\n-  function updateImage() {\r\n-    // Get all images within sliderImage\r\n-    const allImages = sliderImage.querySelectorAll('img')\r\n-\r\n-    // Loop through all images and set opacity\r\n-    allImages.forEach((image, index) => {\r\n-      if (index === slideIndex) {\r\n-        // If it's the current image, set opacity to 1\r\n-        gsap.to(image, { opacity: 1 })\r\n-      } else {\r\n-        // If it's not the current image, set opacity to 0\r\n-        gsap.to(image, { opacity: 0 })\r\n-      }\r\n-    })\r\n-  }\r\n-  function goToSlide(index) {\r\n-    slideIndex = index\r\n-    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-\r\n-    // Update button states based on current slide index\r\n-    updateButtonStates()\r\n-    // Update images based on current slide index\r\n-    updateImage()\r\n-  }\r\n-\r\n-  function updateButtonStates() {\r\n-    // Disable/enable buttons based on current slide index\r\n-    if (slideIndex === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    } else if (slideIndex === lastSlide) {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.add('is--disabled')\r\n-    } else {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    }\r\n-  }\r\n-\r\n-  nextBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex < lastSlide) {\r\n-      slideIndex++\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex > 0) {\r\n-      slideIndex--\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-}\r\n-\r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  let mm = gsap.matchMedia()\r\n-  deliverablesSlider()\r\n-  sliderWithImage()\r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-      }\r\n-      if (isTablet) {\r\n-      }\r\n-      if (isMobile) {\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n-import gsap from 'gsap'\r\n-\r\n-export default function deliverablesSlider() {\r\n-  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n-  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n-\r\n-  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n-  const nextBtn = document.querySelector('#nextBtn')\r\n-  const previousBtn = document.querySelector('#previousBtn')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  changeDeliveralesText(slides)\r\n-  // Get the left and right margin values\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderContainer.style.flexDirection = 'row'\r\n-  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n-  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  let currentSlide = 0\r\n-\r\n-  nextBtn.addEventListener('click', function () {\r\n-    if (currentSlide < numSlides - 1) {\r\n-      currentSlide++\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"next\" button when reaching the last slide\r\n-    if (currentSlide === numSlides - 1) {\r\n-      nextBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"previous\" button\r\n-    previousBtn.classList.remove('is--disabled')\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (currentSlide > 0) {\r\n-      currentSlide--\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"previous\" button when reaching the first slide\r\n-    if (currentSlide === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"next\" button\r\n-    nextBtn.classList.remove('is--disabled')\r\n-  })\r\n-}\r\n-\r\n-function changeDeliveralesText(slides) {\r\n-  slides.forEach((slide) => {\r\n-    const altText = slide.querySelector('img').alt\r\n-    let parts = altText.split(' - ')\r\n-    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n-    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n-    if (parts[0] && parts[0].trim() !== '') {\r\n-      galleryTitle.textContent = parts[0].trim()\r\n-    }\r\n-    if (parts[1] && parts[1].trim() !== '') {\r\n-      galleryservice.textContent = parts[1].trim()\r\n-    }\r\n-  })\r\n-}\r\n-\r\n-function sliderWithImage() {\r\n-  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n-  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n-  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n-  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n-  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n-  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderWrapper.style.flexDirection = 'row'\r\n-  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n-  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  const lastSlide = numSlides - 1\r\n-  let slideIndex = 0\r\n-\r\n-  updateButtonStates()\r\n-  addImages()\r\n-  updateImage()\r\n-  function addImages() {\r\n-    // Clear the existing content in sliderImage\r\n-    sliderImage.innerHTML = ''\r\n-\r\n-    // Loop through each slide and add its images to sliderImage\r\n-    slides.forEach((slide, index) => {\r\n-      // Clone the images to avoid moving them from their original position\r\n-      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n-        const clonedImg = img.cloneNode(true)\r\n-        return clonedImg\r\n-      })\r\n-\r\n-      // Append each image to sliderImage\r\n-      images.forEach((image) => {\r\n-        image.classList.add('slider__image')\r\n-        image.classList.remove('slider__image-hidden')\r\n-        sliderImage.appendChild(image)\r\n-      })\r\n-    })\r\n-  }\r\n-\r\n-  function updateImage() {\r\n-    // Get all images within sliderImage\r\n-    const allImages = sliderImage.querySelectorAll('img')\r\n-\r\n-    // Loop through all images and set opacity\r\n-    allImages.forEach((image, index) => {\r\n-      if (index === slideIndex) {\r\n-        // If it's the current image, set opacity to 1\r\n-        gsap.to(image, { opacity: 1 })\r\n-      } else {\r\n-        // If it's not the current image, set opacity to 0\r\n-        gsap.to(image, { opacity: 0 })\r\n-      }\r\n-    })\r\n-  }\r\n-  function goToSlide(index) {\r\n-    slideIndex = index\r\n-    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-\r\n-    // Update button states based on current slide index\r\n-    updateButtonStates()\r\n-    // Update images based on current slide index\r\n-    updateImage()\r\n-  }\r\n-\r\n-  function updateButtonStates() {\r\n-    // Disable/enable buttons based on current slide index\r\n-    if (slideIndex === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    } else if (slideIndex === lastSlide) {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.add('is--disabled')\r\n-    } else {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    }\r\n-  }\r\n-\r\n-  nextBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex < lastSlide) {\r\n-      slideIndex++\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex > 0) {\r\n-      slideIndex--\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-}\r\n-\r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  let mm = gsap.matchMedia()\r\n-  deliverablesSlider()\r\n-  sliderWithImage()\r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-      }\r\n-      if (isTablet) {\r\n-      }\r\n-      if (isMobile) {\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n-export default function deliverablesSlider() {\r\n-  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n-  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n-\r\n-  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n-  const nextBtn = document.querySelector('#nextBtn')\r\n-  const previousBtn = document.querySelector('#previousBtn')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  changeDeliveralesText(slides)\r\n-  // Get the left and right margin values\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderContainer.style.flexDirection = 'row'\r\n-  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n-  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  let currentSlide = 0\r\n-\r\n-  nextBtn.addEventListener('click', function () {\r\n-    if (currentSlide < numSlides - 1) {\r\n-      currentSlide++\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"next\" button when reaching the last slide\r\n-    if (currentSlide === numSlides - 1) {\r\n-      nextBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"previous\" button\r\n-    previousBtn.classList.remove('is--disabled')\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (currentSlide > 0) {\r\n-      currentSlide--\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"previous\" button when reaching the first slide\r\n-    if (currentSlide === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"next\" button\r\n-    nextBtn.classList.remove('is--disabled')\r\n-  })\r\n-}\r\n-\r\n-function changeDeliveralesText(slides) {\r\n-  slides.forEach((slide) => {\r\n-    const altText = slide.querySelector('img').alt\r\n-    let parts = altText.split(' - ')\r\n-    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n-    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n-    if (parts[0] && parts[0].trim() !== '') {\r\n-      galleryTitle.textContent = parts[0].trim()\r\n-    }\r\n-    if (parts[1] && parts[1].trim() !== '') {\r\n-      galleryservice.textContent = parts[1].trim()\r\n-    }\r\n-  })\r\n-}\r\n-\r\n-function sliderWithImage() {\r\n-  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n-  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n-  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n-  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n-  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n-  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderWrapper.style.flexDirection = 'row'\r\n-  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n-  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  const lastSlide = numSlides - 1\r\n-  let slideIndex = 0\r\n-\r\n-  updateButtonStates()\r\n-  addImages()\r\n-  updateImage()\r\n-  function addImages() {\r\n-    // Clear the existing content in sliderImage\r\n-    sliderImage.innerHTML = ''\r\n-\r\n-    // Loop through each slide and add its images to sliderImage\r\n-    slides.forEach((slide, index) => {\r\n-      // Clone the images to avoid moving them from their original position\r\n-      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n-        const clonedImg = img.cloneNode(true)\r\n-        return clonedImg\r\n-      })\r\n-\r\n-      // Append each image to sliderImage\r\n-      images.forEach((image) => {\r\n-        image.classList.add('slider__image')\r\n-        image.classList.remove('slider__image-hidden')\r\n-        sliderImage.appendChild(image)\r\n-      })\r\n-    })\r\n-  }\r\n-\r\n-  function updateImage() {\r\n-    // Get all images within sliderImage\r\n-    const allImages = sliderImage.querySelectorAll('img')\r\n-\r\n-    // Loop through all images and set opacity\r\n-    allImages.forEach((image, index) => {\r\n-      if (index === slideIndex) {\r\n-        // If it's the current image, set opacity to 1\r\n-        gsap.to(image, { opacity: 1 })\r\n-      } else {\r\n-        // If it's not the current image, set opacity to 0\r\n-        gsap.to(image, { opacity: 0 })\r\n-      }\r\n-    })\r\n-  }\r\n-  function goToSlide(index) {\r\n-    slideIndex = index\r\n-    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-\r\n-    // Update button states based on current slide index\r\n-    updateButtonStates()\r\n-    // Update images based on current slide index\r\n-    updateImage()\r\n-  }\r\n-\r\n-  function updateButtonStates() {\r\n-    // Disable/enable buttons based on current slide index\r\n-    if (slideIndex === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    } else if (slideIndex === lastSlide) {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.add('is--disabled')\r\n-    } else {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    }\r\n-  }\r\n-\r\n-  nextBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex < lastSlide) {\r\n-      slideIndex++\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex > 0) {\r\n-      slideIndex--\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-}\r\n-\r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  let mm = gsap.matchMedia()\r\n-  deliverablesSlider()\r\n-  sliderWithImage()\r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-      }\r\n-      if (isTablet) {\r\n-      }\r\n-      if (isMobile) {\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n-function deliverablesSlider() {\r\n-  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n-  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n-\r\n-  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n-  const nextBtn = document.querySelector('#nextBtn')\r\n-  const previousBtn = document.querySelector('#previousBtn')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  changeDeliveralesText(slides)\r\n-  // Get the left and right margin values\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderContainer.style.flexDirection = 'row'\r\n-  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n-  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  let currentSlide = 0\r\n-\r\n-  nextBtn.addEventListener('click', function () {\r\n-    if (currentSlide < numSlides - 1) {\r\n-      currentSlide++\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"next\" button when reaching the last slide\r\n-    if (currentSlide === numSlides - 1) {\r\n-      nextBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"previous\" button\r\n-    previousBtn.classList.remove('is--disabled')\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (currentSlide > 0) {\r\n-      currentSlide--\r\n-      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n-    }\r\n-\r\n-    // Disable the \"previous\" button when reaching the first slide\r\n-    if (currentSlide === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-    }\r\n-\r\n-    // Enable the \"next\" button\r\n-    nextBtn.classList.remove('is--disabled')\r\n-  })\r\n-}\r\n-\r\n-function changeDeliveralesText(slides) {\r\n-  slides.forEach((slide) => {\r\n-    const altText = slide.querySelector('img').alt\r\n-    let parts = altText.split(' - ')\r\n-    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n-    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n-    if (parts[0] && parts[0].trim() !== '') {\r\n-      galleryTitle.textContent = parts[0].trim()\r\n-    }\r\n-    if (parts[1] && parts[1].trim() !== '') {\r\n-      galleryservice.textContent = parts[1].trim()\r\n-    }\r\n-  })\r\n-}\r\n-\r\n-function sliderWithImage() {\r\n-  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n-  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n-  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n-  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n-  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n-  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n-  const slideWidth = slides[0].offsetWidth\r\n-\r\n-  const computedStyle = window.getComputedStyle(slides[0])\r\n-  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n-  const totalWidthOfSlides = slideWidth + marginRight\r\n-  sliderWrapper.style.flexDirection = 'row'\r\n-  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n-  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n-  const numSlides = slides.length\r\n-  const lastSlide = numSlides - 1\r\n-  let slideIndex = 0\r\n-\r\n-  updateButtonStates()\r\n-  addImages()\r\n-  updateImage()\r\n-  function addImages() {\r\n-    // Clear the existing content in sliderImage\r\n-    sliderImage.innerHTML = ''\r\n-\r\n-    // Loop through each slide and add its images to sliderImage\r\n-    slides.forEach((slide, index) => {\r\n-      // Clone the images to avoid moving them from their original position\r\n-      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n-        const clonedImg = img.cloneNode(true)\r\n-        return clonedImg\r\n-      })\r\n-\r\n-      // Append each image to sliderImage\r\n-      images.forEach((image) => {\r\n-        image.classList.add('slider__image')\r\n-        image.classList.remove('slider__image-hidden')\r\n-        sliderImage.appendChild(image)\r\n-      })\r\n-    })\r\n-  }\r\n-\r\n-  function updateImage() {\r\n-    // Get all images within sliderImage\r\n-    const allImages = sliderImage.querySelectorAll('img')\r\n-\r\n-    // Loop through all images and set opacity\r\n-    allImages.forEach((image, index) => {\r\n-      if (index === slideIndex) {\r\n-        // If it's the current image, set opacity to 1\r\n-        gsap.to(image, { opacity: 1 })\r\n-      } else {\r\n-        // If it's not the current image, set opacity to 0\r\n-        gsap.to(image, { opacity: 0 })\r\n-      }\r\n-    })\r\n-  }\r\n-  function goToSlide(index) {\r\n-    slideIndex = index\r\n-    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-\r\n-    // Update button states based on current slide index\r\n-    updateButtonStates()\r\n-    // Update images based on current slide index\r\n-    updateImage()\r\n-  }\r\n-\r\n-  function updateButtonStates() {\r\n-    // Disable/enable buttons based on current slide index\r\n-    if (slideIndex === 0) {\r\n-      previousBtn.classList.add('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    } else if (slideIndex === lastSlide) {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.add('is--disabled')\r\n-    } else {\r\n-      previousBtn.classList.remove('is--disabled')\r\n-      nextBtn.classList.remove('is--disabled')\r\n-    }\r\n-  }\r\n-\r\n-  nextBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex < lastSlide) {\r\n-      slideIndex++\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-\r\n-  previousBtn.addEventListener('pointerdown', function () {\r\n-    if (slideIndex > 0) {\r\n-      slideIndex--\r\n-      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n-      updateImage()\r\n-    }\r\n-    updateButtonStates()\r\n-  })\r\n-}\r\n-\r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  let mm = gsap.matchMedia()\r\n-  deliverablesSlider()\r\n-  sliderWithImage()\r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-      }\r\n-      if (isTablet) {\r\n-      }\r\n-      if (isMobile) {\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n+)\r\n"
                },
                {
                    "date": 1701730955705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,19 +168,22 @@\n     updateButtonStates()\r\n   })\r\n }\r\n \r\n-\r\n- if (document.readyState !== 'loading') {\r\n+if (document.readyState !== 'loading') {\r\n+  initCode()\r\n+} else {\r\n+  document.addEventListener('DOMContentLoaded', function () {\r\n     initCode()\r\n-  } else {\r\n-    document.addEventListener('DOMContentLoaded', function () {\r\n-      initCode()\r\n-    })\r\n-  }\r\n-  function initCode() {\r\n-        \r\n+  })\r\n+}\r\n+function initCode() {\r\n+  trendsSplide.mount()\r\n+}\r\n \r\n+document.addEventListener('DOMContentLoaded', function () {\r\n+  console.log('loaded')\r\n+\r\n   let mm = gsap.matchMedia()\r\n   deliverablesSlider()\r\n   sliderWithImage()\r\n   mm.add(\r\n@@ -201,8 +204,5 @@\n \r\n       return () => {}\r\n     }\r\n   )\r\n-\r\n-  }\r\n-\r\n-)\r\n+})\r\n"
                },
                {
                    "date": 1701730972432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,30 +179,5 @@\n function initCode() {\r\n   trendsSplide.mount()\r\n }\r\n \r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  console.log('loaded')\r\n-\r\n-  let mm = gsap.matchMedia()\r\n-  deliverablesSlider()\r\n-  sliderWithImage()\r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-      }\r\n-      if (isTablet) {\r\n-      }\r\n-      if (isMobile) {\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n+document.addEventListener('DOMContentLoaded', function () {})\r\n"
                },
                {
                    "date": 1701730980631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,8 +176,31 @@\n     initCode()\r\n   })\r\n }\r\n function initCode() {\r\n-  trendsSplide.mount()\r\n+  console.log('loaded')\r\n+\r\n+  let mm = gsap.matchMedia()\r\n+  deliverablesSlider()\r\n+  sliderWithImage()\r\n+  mm.add(\r\n+    {\r\n+      isDesktop: '(min-width: 991px)',\r\n+      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+      isMobile: '(max-width: 477px)',\r\n+    },\r\n+    (context) => {\r\n+      let { isDesktop, isTablet, isMobile } = context.conditions\r\n+\r\n+      if (isDesktop) {\r\n+      }\r\n+      if (isTablet) {\r\n+      }\r\n+      if (isMobile) {\r\n+      }\r\n+\r\n+      return () => {}\r\n+    }\r\n+  )\r\n }\r\n \r\n document.addEventListener('DOMContentLoaded', function () {})\r\n"
                },
                {
                    "date": 1702426566982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import gsap from 'gsap'\r\n \r\n-export default function deliverablesSlider() {\r\n+export default function study(){\r\n+function deliverablesSlider() {\r\n   //   console.log('asdfasdf')\r\n \r\n   const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n   const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n@@ -10,9 +11,9 @@\n   const nextBtn = document.querySelector('#nextBtn')\r\n   const previousBtn = document.querySelector('#previousBtn')\r\n   const slideWidth = slides[0].offsetWidth\r\n \r\n-  changeDeliveralesText(slides)\r\n+  changeDeliverablesText(slides)\r\n   // Get the left and right margin values\r\n   const computedStyle = window.getComputedStyle(slides[0])\r\n   const marginRight = parseInt(computedStyle.marginRight, 10)\r\n   const totalWidthOfSlides = slideWidth + marginRight\r\n@@ -52,19 +53,19 @@\n     nextBtn.classList.remove('is--disabled')\r\n   })\r\n }\r\n \r\n-function changeDeliveralesText(slides) {\r\n+function changeDeliverablesText(slides) {\r\n   slides.forEach((slide) => {\r\n     const altText = slide.querySelector('img').alt\r\n     let parts = altText.split(' - ')\r\n     let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n-    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n+    let galleryService = slide.querySelector('.deliverales__img_service')\r\n     if (parts[0] && parts[0].trim() !== '') {\r\n       galleryTitle.textContent = parts[0].trim()\r\n     }\r\n     if (parts[1] && parts[1].trim() !== '') {\r\n-      galleryservice.textContent = parts[1].trim()\r\n+      galleryService.textContent = parts[1].trim()\r\n     }\r\n   })\r\n }\r\n \r\n@@ -201,4 +202,6 @@\n       return () => {}\r\n     }\r\n   )\r\n }\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702427271908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import gsap from 'gsap'\r\n \r\n export default function study() {\r\n   function deliverablesSlider() {\r\n-    //   console.log('asdfasdf')\r\n+  console.log('study')\r\n \r\n     const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n     const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n \r\n"
                },
                {
                    "date": 1702427278456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,5 +202,5 @@\n         return () => {}\r\n       }\r\n     )\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                }
            ],
            "date": 1701728480167,
            "name": "Commit-0",
            "content": "function deliverablesSlider() {\r\n  const sliderWrapper = document.querySelector('.deliverables__slider-wrapper')\r\n  const sliderContainer = document.querySelector('.deliverables__slider-container')\r\n\r\n  const slides = gsap.utils.toArray('.deliverables__slider-item')\r\n  const nextBtn = document.querySelector('#nextBtn')\r\n  const previousBtn = document.querySelector('#previousBtn')\r\n  const slideWidth = slides[0].offsetWidth\r\n\r\n  changeDeliveralesText(slides)\r\n  // Get the left and right margin values\r\n  const computedStyle = window.getComputedStyle(slides[0])\r\n  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n  const totalWidthOfSlides = slideWidth + marginRight\r\n  sliderContainer.style.flexDirection = 'row'\r\n  const sliderContainerWidth = totalWidthOfSlides * slides.lenght\r\n  sliderWrapper.style.width = sliderContainerWidth + 'px'\r\n  const numSlides = slides.length\r\n  let currentSlide = 0\r\n\r\n  nextBtn.addEventListener('click', function () {\r\n    if (currentSlide < numSlides - 1) {\r\n      currentSlide++\r\n      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n    }\r\n\r\n    // Disable the \"next\" button when reaching the last slide\r\n    if (currentSlide === numSlides - 1) {\r\n      nextBtn.classList.add('is--disabled')\r\n    }\r\n\r\n    // Enable the \"previous\" button\r\n    previousBtn.classList.remove('is--disabled')\r\n  })\r\n\r\n  previousBtn.addEventListener('pointerdown', function () {\r\n    if (currentSlide > 0) {\r\n      currentSlide--\r\n      gsap.to(sliderContainer, { x: -currentSlide * totalWidthOfSlides })\r\n    }\r\n\r\n    // Disable the \"previous\" button when reaching the first slide\r\n    if (currentSlide === 0) {\r\n      previousBtn.classList.add('is--disabled')\r\n    }\r\n\r\n    // Enable the \"next\" button\r\n    nextBtn.classList.remove('is--disabled')\r\n  })\r\n}\r\n\r\nfunction changeDeliveralesText(slides) {\r\n  slides.forEach((slide) => {\r\n    const altText = slide.querySelector('img').alt\r\n    let parts = altText.split(' - ')\r\n    let galleryTitle = slide.querySelector('.deliverables__img_title')\r\n    let galleryservice = slide.querySelector('.deliverales__img_service')\r\n    if (parts[0] && parts[0].trim() !== '') {\r\n      galleryTitle.textContent = parts[0].trim()\r\n    }\r\n    if (parts[1] && parts[1].trim() !== '') {\r\n      galleryservice.textContent = parts[1].trim()\r\n    }\r\n  })\r\n}\r\n\r\nfunction sliderWithImage() {\r\n  const sliderContainer = document.querySelector('.slider__container.is--portfolio')\r\n  const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n  const slides = gsap.utils.toArray('.slider__with-image-item')\r\n  const nextBtn = document.querySelector('#nextBtnImageSlider')\r\n  const previousBtn = document.querySelector('#previousBtnImageSlider')\r\n  const sliderImage = document.querySelector('.slider__image-wrapper')\r\n  const slideWidth = slides[0].offsetWidth\r\n\r\n  const computedStyle = window.getComputedStyle(slides[0])\r\n  const marginRight = parseInt(computedStyle.marginRight, 10)\r\n  const totalWidthOfSlides = slideWidth + marginRight\r\n  sliderWrapper.style.flexDirection = 'row'\r\n  const sliderWrapperWidth = totalWidthOfSlides * slides.length\r\n  sliderWrapper.style.width = sliderWrapperWidth + 'px'\r\n  const numSlides = slides.length\r\n  const lastSlide = numSlides - 1\r\n  let slideIndex = 0\r\n\r\n  updateButtonStates()\r\n  addImages()\r\n  updateImage()\r\n  function addImages() {\r\n    // Clear the existing content in sliderImage\r\n    sliderImage.innerHTML = ''\r\n\r\n    // Loop through each slide and add its images to sliderImage\r\n    slides.forEach((slide, index) => {\r\n      // Clone the images to avoid moving them from their original position\r\n      const images = Array.from(slide.querySelectorAll('img')).map((img) => {\r\n        const clonedImg = img.cloneNode(true)\r\n        return clonedImg\r\n      })\r\n\r\n      // Append each image to sliderImage\r\n      images.forEach((image) => {\r\n        image.classList.add('slider__image')\r\n        image.classList.remove('slider__image-hidden')\r\n        sliderImage.appendChild(image)\r\n      })\r\n    })\r\n  }\r\n\r\n  function updateImage() {\r\n    // Get all images within sliderImage\r\n    const allImages = sliderImage.querySelectorAll('img')\r\n\r\n    // Loop through all images and set opacity\r\n    allImages.forEach((image, index) => {\r\n      if (index === slideIndex) {\r\n        // If it's the current image, set opacity to 1\r\n        gsap.to(image, { opacity: 1 })\r\n      } else {\r\n        // If it's not the current image, set opacity to 0\r\n        gsap.to(image, { opacity: 0 })\r\n      }\r\n    })\r\n  }\r\n  function goToSlide(index) {\r\n    slideIndex = index\r\n    gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n\r\n    // Update button states based on current slide index\r\n    updateButtonStates()\r\n    // Update images based on current slide index\r\n    updateImage()\r\n  }\r\n\r\n  function updateButtonStates() {\r\n    // Disable/enable buttons based on current slide index\r\n    if (slideIndex === 0) {\r\n      previousBtn.classList.add('is--disabled')\r\n      nextBtn.classList.remove('is--disabled')\r\n    } else if (slideIndex === lastSlide) {\r\n      previousBtn.classList.remove('is--disabled')\r\n      nextBtn.classList.add('is--disabled')\r\n    } else {\r\n      previousBtn.classList.remove('is--disabled')\r\n      nextBtn.classList.remove('is--disabled')\r\n    }\r\n  }\r\n\r\n  nextBtn.addEventListener('pointerdown', function () {\r\n    if (slideIndex < lastSlide) {\r\n      slideIndex++\r\n      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n      updateImage()\r\n    }\r\n    updateButtonStates()\r\n  })\r\n\r\n  previousBtn.addEventListener('pointerdown', function () {\r\n    if (slideIndex > 0) {\r\n      slideIndex--\r\n      gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides })\r\n      updateImage()\r\n    }\r\n    updateButtonStates()\r\n  })\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  let mm = gsap.matchMedia()\r\n  deliverablesSlider()\r\n  sliderWithImage()\r\n  mm.add(\r\n    {\r\n      isDesktop: '(min-width: 991px)',\r\n      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n      isMobile: '(max-width: 477px)',\r\n    },\r\n    (context) => {\r\n      let { isDesktop, isTablet, isMobile } = context.conditions\r\n\r\n      if (isDesktop) {\r\n      }\r\n      if (isTablet) {\r\n      }\r\n      if (isMobile) {\r\n      }\r\n\r\n      return () => {}\r\n    }\r\n  )\r\n})\r\n"
        }
    ]
}