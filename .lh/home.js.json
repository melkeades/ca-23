{
    "sourceFile": "home.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1702426672330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702427188854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import gsap from 'gsap'\r\n export default function home() {\r\n   function sliderWithImage() {\r\n     const sliderContainer = document.querySelector('.is--slider')\r\n     const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n"
                },
                {
                    "date": 1702427201460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import gsap from 'gsap'\r\n+import ScrollTrigger from 'gsap/ScrollTrigger'\r\n export default function home() {\r\n   function sliderWithImage() {\r\n     const sliderContainer = document.querySelector('.is--slider')\r\n     const sliderWrapper = document.querySelector('.slider__with-image-wrapper')\r\n"
                }
            ],
            "date": 1702426672330,
            "name": "Commit-0",
            "content": "export default function home() {\r\n    function sliderWithImage() {\r\n        const sliderContainer = document.querySelector(\".is--slider\");\r\n        const sliderWrapper = document.querySelector(\".slider__with-image-wrapper\");\r\n        const slides = gsap.utils.toArray(\".slider__with-image-item\");\r\n        const nextBtn = document.querySelector(\"#nextBtn\");\r\n        const previousBtn = document.querySelector(\"#previousBtn\");\r\n        const sliderNav = sliderContainer.querySelector(\".slide__naw_wrapper\");\r\n        const dot = sliderNav.querySelector(\".slide__nav\");\r\n        const sliderImage = document.querySelector(\".slider__image-wrapper\");\r\n        const slideWidth = slides[0].offsetWidth;\r\n\r\n        const computedStyle = window.getComputedStyle(slides[0]);\r\n        const marginRight = parseInt(computedStyle.marginRight, 10);\r\n        const totalWidthOfSlides = slideWidth + marginRight;\r\n        sliderWrapper.style.flexDirection = \"row\";\r\n        const sliderWrapperWidth = totalWidthOfSlides * slides.length;\r\n        sliderWrapper.style.width = sliderWrapperWidth + \"px\";\r\n        const numSlides = slides.length;\r\n        const lastSlide = numSlides - 1;\r\n        let slideIndex = 0;\r\n\r\n        createSliderNav();\r\n        updateButtonStates();\r\n        addImages();\r\n        updateImage();\r\n        function addImages() {\r\n            // Clear the existing content in sliderImage\r\n            sliderImage.innerHTML = \"\";\r\n\r\n            // Loop through each slide and add its images to sliderImage\r\n            slides.forEach((slide, index) => {\r\n                // Clone the images to avoid moving them from their original position\r\n                const images = Array.from(slide.querySelectorAll(\"img\")).map((img) => {\r\n                    const clonedImg = img.cloneNode(true);\r\n                    return clonedImg;\r\n                });\r\n\r\n                // Append each image to sliderImage\r\n                images.forEach((image) => {\r\n                    image.classList.add(\"slider__image\");\r\n                    image.classList.remove(\"slider__image-hidden\");\r\n                    sliderImage.appendChild(image);\r\n                });\r\n            });\r\n        }\r\n\r\n        function updateImage() {\r\n            // Get all images within sliderImage\r\n            const allImages = sliderImage.querySelectorAll(\"img\");\r\n\r\n            // Loop through all images and set opacity\r\n            allImages.forEach((image, index) => {\r\n                if (index === slideIndex) {\r\n                    // If it's the current image, set opacity to 1\r\n                    gsap.to(image, { opacity: 1 });\r\n                } else {\r\n                    // If it's not the current image, set opacity to 0\r\n                    gsap.to(image, { opacity: 0 });\r\n                }\r\n            });\r\n        }\r\n\r\n        function createSliderNav() {\r\n            sliderNav.innerHTML = \"\";\r\n\r\n            for (let i = 0; i < numSlides; i++) {\r\n                const clonedDot = dot.cloneNode(true);\r\n                sliderNav.appendChild(clonedDot);\r\n\r\n                // Add event listener to each dot\r\n                clonedDot.addEventListener(\"click\", function () {\r\n                    goToSlide(i);\r\n                });\r\n\r\n                // Add is--wide class to the dot corresponding to the current slide\r\n                if (i === slideIndex) {\r\n                    clonedDot.classList.add(\"is--wide\");\r\n                }\r\n            }\r\n        }\r\n\r\n        function goToSlide(index) {\r\n            slideIndex = index;\r\n            gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides });\r\n\r\n            // Update button states based on current slide index\r\n            updateButtonStates();\r\n\r\n            // Update dot classes based on current slide index\r\n            updateDotClasses();\r\n\r\n            // Update images based on current slide index\r\n            updateImage();\r\n        }\r\n\r\n        function updateButtonStates() {\r\n            // Disable/enable buttons based on current slide index\r\n            if (slideIndex === 0) {\r\n                previousBtn.classList.add(\"is--disabled\");\r\n                nextBtn.classList.remove(\"is--disabled\");\r\n            } else if (slideIndex === lastSlide) {\r\n                previousBtn.classList.remove(\"is--disabled\");\r\n                nextBtn.classList.add(\"is--disabled\");\r\n            } else {\r\n                previousBtn.classList.remove(\"is--disabled\");\r\n                nextBtn.classList.remove(\"is--disabled\");\r\n            }\r\n        }\r\n\r\n        function updateDotClasses() {\r\n            const dots = sliderNav.querySelectorAll(\".slide__nav\");\r\n\r\n            // Loop through all dots to add or remove is--wide class\r\n            dots.forEach(function (dot, i) {\r\n                dot.classList.toggle(\"is--wide\", i === slideIndex);\r\n            });\r\n        }\r\n\r\n        nextBtn.addEventListener(\"pointerdown\", function () {\r\n            if (slideIndex < lastSlide) {\r\n                slideIndex++;\r\n                gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides });\r\n                updateImage();\r\n            }\r\n            updateDotClasses();\r\n            updateButtonStates();\r\n        });\r\n\r\n        previousBtn.addEventListener(\"pointerdown\", function () {\r\n            if (slideIndex > 0) {\r\n                slideIndex--;\r\n                gsap.to(sliderWrapper, { x: -slideIndex * totalWidthOfSlides });\r\n                updateImage();\r\n            }\r\n            updateDotClasses();\r\n\r\n            updateButtonStates();\r\n        });\r\n    }\r\n\r\n    function animateDots() {\r\n        gsap.set(\".dot\", { opacity: 0 });\r\n        const scrollDonwIndicator = document.querySelector(\".dot__wrapper\");\r\n        const dots = gsap.utils.toArray(\".dot__wrapper .dot\");\r\n        const dotTl = gsap.timeline({ repeat: -1 }); // Infinite repeat\r\n        dotTl.to(dots, {\r\n            opacity: 1,\r\n            stagger: 0.05,\r\n            duration: 0.2,\r\n            ease: \"power2.inOut\",\r\n        });\r\n        dotTl.to(\r\n            dots,\r\n            { opacity: 0, stagger: -0.05, duration: 0.2, ease: \"power2.inOut\" },\r\n            \"+=0.2\",\r\n        );\r\n    }\r\n\r\n    function cardHover() {\r\n        const cards = gsap.utils.toArray(\".collection__item-blog\");\r\n\r\n        cards.forEach((card) => {\r\n            let overlay = card.querySelector(\".black__white-overlay\");\r\n            let badge = card.querySelector(\".blog__tag-w\");\r\n            let title = card.querySelector(\".blog__title\");\r\n            let badgeText = card.querySelector(\".blog__tag-text\");\r\n\r\n            let cardTl = gsap.timeline({\r\n                paused: true,\r\n                defaults: {\r\n                    duration: 0.5,\r\n                    ease: \"Power2.inOut\", // Using Power2 easing for smoother transitions\r\n                },\r\n            });\r\n\r\n            cardTl\r\n                .fromTo(overlay, { opacity: 1 }, { opacity: 0.2 }, \"<\")\r\n                .fromTo(\r\n                    badge,\r\n                    { backgroundColor: \"white\" },\r\n                    { backgroundColor: \"#121216\", duration: 0.5 },\r\n                    \"<\",\r\n                )\r\n                .fromTo(\r\n                    badgeText,\r\n                    { color: \"#121216\" },\r\n                    { color: \"white\", duration: 0.5 },\r\n                    \"<\",\r\n                )\r\n                .to(\r\n                    title,\r\n                    {\r\n                        textDecorationColor: \"#0f9\",\r\n                        ease: \"Power2.inOut\",\r\n                    },\r\n                    \"<\",\r\n                );\r\n\r\n            card.addEventListener(\"mouseover\", () => {\r\n                cardTl.timeScale(1).play();\r\n            });\r\n\r\n            card.addEventListener(\"mouseout\", () => {\r\n                cardTl.timeScale(1).reverse();\r\n            });\r\n        });\r\n    }\r\n\r\n    function laptopImagePosition() {\r\n        const laptopImg = document.querySelector(\".whatwedo__image-w\");\r\n        const windowWidth = document.documentElement.clientWidth;\r\n        const greenCardWidth = document.querySelector(\"#greenCard\").offsetWidth;\r\n        const imageWidth = windowWidth / 2 - greenCardWidth;\r\n        laptopImg.style.width = imageWidth + \"px\";\r\n    }\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n        let mm = gsap.matchMedia();\r\n        animateDots();\r\n        sliderWithImage();\r\n        laptopImagePosition();\r\n        cardHover();\r\n        mm.add(\r\n            {\r\n                isDesktop: \"(min-width: 991px)\",\r\n                isTablet: \"(max-width: 990px) and (min-width: 478px)\",\r\n                isMobile: \"(max-width: 477px)\",\r\n            },\r\n            (context) => {\r\n                let { isDesktop, isTablet, isMobile } = context.conditions;\r\n\r\n                if (isDesktop) {\r\n                }\r\n                if (isTablet) {\r\n                }\r\n                if (isMobile) {\r\n                }\r\n\r\n                return () => {};\r\n            },\r\n        );\r\n    });\r\n}"
        }
    ]
}