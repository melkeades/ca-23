{
    "sourceFile": "blog-post.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1703143798570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703143843920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,156 +1,113 @@\n import Splide from '@splidejs/splide'\r\n import { addSplideClasses, connectSplideArrows, sel } from './_service'\r\n-// function deliverablesSlider(maxSlidesToShow) {\r\n-//   const sliderWrapper = document.querySelector(\".blog__slider-wrapper\");\r\n-//   const slides = gsap.utils.toArray(\".collection__item-blog-slider\");\r\n-//   const nextBtn = document.querySelector(\"#nextBtn\");\r\n-//   const previousBtn = document.querySelector(\"#previousBtn\");\r\n-//   const slideWidth = slides[0].offsetWidth;\r\n+export default function blogPost () { \r\n+  \r\n+  function cardHover() {\r\n+    const cards = gsap.utils.toArray('.collection__item-blog-slider')\r\n+    console.log(cards)\r\n \r\n-//   const computedStyle = window.getComputedStyle(slides[0]);\r\n-//   const marginRight = parseInt(computedStyle.marginRight, 10);\r\n-//   const totalWidthOfSlide = slideWidth + marginRight;\r\n-//   sliderWrapper.style.flexDirection = \"row\";\r\n-//   const numSlides = slides.length;\r\n-//   let currentSlide = 0;\r\n+    cards.forEach((card) => {\r\n+      let overlay = card.querySelector('.black__white-overlay')\r\n+      let badge = card.querySelector('.blog__tag-w')\r\n+      let title = card.querySelector('.blog__title')\r\n+      let badgeText = card.querySelector('.blog__tag-text')\r\n \r\n-//   nextBtn.addEventListener(\"pointerdown\", () => nextSlide(maxSlidesToShow));\r\n-//   previousBtn.addEventListener(\"pointerdown\", () =>\r\n-//     previousSlide(maxSlidesToShow),\r\n-//   );\r\n+      let cardTl = gsap.timeline({\r\n+        paused: true,\r\n+        defaults: {\r\n+          duration: 0.5,\r\n+          ease: 'Power2.inOut', // Using Power2 easing for smoother transitions\r\n+        },\r\n+      })\r\n \r\n-//   function previousSlide(maxSlidesToShow) {\r\n-//     if (currentSlide > 0) {\r\n-//       currentSlide = currentSlide - maxSlidesToShow;\r\n-//       gsap.to(sliderWrapper, { x: -currentSlide * totalWidthOfSlide });\r\n-//     }\r\n+      cardTl\r\n+        .fromTo(overlay, { opacity: 1 }, { opacity: 0.2 }, '<')\r\n+        .fromTo(badge, { backgroundColor: 'white' }, { backgroundColor: '#121216', duration: 0.5 }, '<')\r\n+        .fromTo(badgeText, { color: '#121216' }, { color: 'white', duration: 0.5 }, '<')\r\n+        .to(\r\n+          title,\r\n+          {\r\n+            textDecorationColor: '#0f9',\r\n+            ease: 'Power2.inOut',\r\n+          },\r\n+          '<'\r\n+        )\r\n \r\n-//     if (currentSlide === 0) {\r\n-//       previousBtn.classList.add(\"is--disabled\");\r\n-//     }\r\n+      card.addEventListener('mouseover', () => {\r\n+        cardTl.timeScale(1).play()\r\n+      })\r\n \r\n-//     nextBtn.classList.remove(\"is--disabled\");\r\n-//   }\r\n-\r\n-//   function nextSlide(maxSlidesToShow) {\r\n-//     if (currentSlide < numSlides - maxSlidesToShow) {\r\n-//       currentSlide = currentSlide + maxSlidesToShow;\r\n-//       gsap.to(sliderWrapper, { x: -currentSlide * totalWidthOfSlide });\r\n-//     }\r\n-\r\n-//     if (currentSlide >= numSlides - maxSlidesToShow) {\r\n-//       nextBtn.classList.add(\"is--disabled\");\r\n-//     }\r\n-\r\n-//     previousBtn.classList.remove(\"is--disabled\");\r\n-//   }\r\n-// }\r\n-\r\n-function cardHover() {\r\n-  const cards = gsap.utils.toArray('.collection__item-blog-slider')\r\n-  console.log(cards)\r\n-\r\n-  cards.forEach((card) => {\r\n-    let overlay = card.querySelector('.black__white-overlay')\r\n-    let badge = card.querySelector('.blog__tag-w')\r\n-    let title = card.querySelector('.blog__title')\r\n-    let badgeText = card.querySelector('.blog__tag-text')\r\n-\r\n-    let cardTl = gsap.timeline({\r\n-      paused: true,\r\n-      defaults: {\r\n-        duration: 0.5,\r\n-        ease: 'Power2.inOut', // Using Power2 easing for smoother transitions\r\n-      },\r\n+      card.addEventListener('mouseout', () => {\r\n+        cardTl.timeScale(1).reverse()\r\n+      })\r\n     })\r\n+  }\r\n \r\n-    cardTl\r\n-      .fromTo(overlay, { opacity: 1 }, { opacity: 0.2 }, '<')\r\n-      .fromTo(badge, { backgroundColor: 'white' }, { backgroundColor: '#121216', duration: 0.5 }, '<')\r\n-      .fromTo(badgeText, { color: '#121216' }, { color: 'white', duration: 0.5 }, '<')\r\n-      .to(\r\n-        title,\r\n-        {\r\n-          textDecorationColor: '#0f9',\r\n-          ease: 'Power2.inOut',\r\n+  function sliderInit() {\r\n+    const classPrefix = 'blog'\r\n+    addSplideClasses(classPrefix + '__slider')\r\n+    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n+      arrows: false,\r\n+      pagination: false,\r\n+      gap: '8rem',\r\n+      type: 'loop',\r\n+      perPage: 3,\r\n+      perMove: 3,\r\n+      speed: 1500,\r\n+      interval: 5000,\r\n+      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n+      autoplay: 'true',\r\n+      intersection: {\r\n+        inView: {\r\n+          autoplay: true,\r\n         },\r\n-        '<'\r\n-      )\r\n-\r\n-    card.addEventListener('mouseover', () => {\r\n-      cardTl.timeScale(1).play()\r\n+        outView: {\r\n+          autoplay: false,\r\n+        },\r\n+      },\r\n+      breakpoints: {\r\n+        767: {\r\n+          perPage: 2,\r\n+          perMove: 2,\r\n+          autoplay: false,\r\n+          gap: '4rem',\r\n+        },\r\n+        478: {\r\n+          autoplay: false,\r\n+          perPage: 1,\r\n+          perMove: 1,\r\n+        },\r\n+      },\r\n     })\r\n+    slider.mount()\r\n+    connectSplideArrows(slider, classPrefix)\r\n+  }\r\n \r\n-    card.addEventListener('mouseout', () => {\r\n-      cardTl.timeScale(1).reverse()\r\n-    })\r\n-  })\r\n-}\r\n+  document.addEventListener('DOMContentLoaded', function () {\r\n+    cardHover()\r\n+    let mm = gsap.matchMedia()\r\n \r\n-function sliderInit() {\r\n-  const classPrefix = 'blog'\r\n-  addSplideClasses(classPrefix + '__slider')\r\n-  const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n-    arrows: false,\r\n-    pagination: false,\r\n-    gap: '8rem',\r\n-    type: 'loop',\r\n-    perPage: 3,\r\n-    perMove: 3,\r\n-    speed: 1500,\r\n-    interval: 5000,\r\n-    easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n-    autoplay: 'true',\r\n-    intersection: {\r\n-      inView: {\r\n-        autoplay: true,\r\n+    mm.add(\r\n+      {\r\n+        isDesktop: '(min-width: 991px)',\r\n+        isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n+        isMobile: '(max-width: 477px)',\r\n       },\r\n-      outView: {\r\n-        autoplay: false,\r\n-      },\r\n-    },\r\n-    breakpoints: {\r\n-      767: {\r\n-        perPage: 2,\r\n-        perMove: 2,\r\n-        autoplay: false,\r\n-        gap: '4rem',\r\n-      },\r\n-      478: {\r\n-        autoplay: false,\r\n-        perPage: 1,\r\n-        perMove: 1,\r\n-      },\r\n-    },\r\n-  })\r\n-  slider.mount()\r\n-  connectSplideArrows(slider, classPrefix)\r\n-}\r\n+      (context) => {\r\n+        let { isDesktop, isTablet, isMobile } = context.conditions\r\n \r\n-document.addEventListener('DOMContentLoaded', function () {\r\n-  cardHover()\r\n-  let mm = gsap.matchMedia()\r\n+        if (isDesktop) {\r\n+          // deliverablesSlider(3);\r\n+        }\r\n+        if (isTablet) {\r\n+          // deliverablesSlider(2);\r\n+        }\r\n+        if (isMobile) {\r\n+          // deliverablesSlider(1);\r\n+        }\r\n \r\n-  mm.add(\r\n-    {\r\n-      isDesktop: '(min-width: 991px)',\r\n-      isTablet: '(max-width: 990px) and (min-width: 478px)',\r\n-      isMobile: '(max-width: 477px)',\r\n-    },\r\n-    (context) => {\r\n-      let { isDesktop, isTablet, isMobile } = context.conditions\r\n-\r\n-      if (isDesktop) {\r\n-        // deliverablesSlider(3);\r\n+        return () => {}\r\n       }\r\n-      if (isTablet) {\r\n-        // deliverablesSlider(2);\r\n-      }\r\n-      if (isMobile) {\r\n-        // deliverablesSlider(1);\r\n-      }\r\n-\r\n-      return () => {}\r\n-    }\r\n-  )\r\n-})\r\n+    )\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703143880865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import Splide from '@splidejs/splide'\r\n import { addSplideClasses, connectSplideArrows, sel } from './_service'\r\n-export default function blogPost() {\r\n+export default function BlogPost() {\r\n   function cardHover() {\r\n     const cards = gsap.utils.toArray('.collection__item-blog-slider')\r\n     console.log(cards)\r\n \r\n"
                }
            ],
            "date": 1703143798570,
            "name": "Commit-0",
            "content": "import Splide from \"@splidejs/splide\";\r\nimport { addSplideClasses, connectSplideArrows, sel } from \"./_service\";\r\n// function deliverablesSlider(maxSlidesToShow) {\r\n//   const sliderWrapper = document.querySelector(\".blog__slider-wrapper\");\r\n//   const slides = gsap.utils.toArray(\".collection__item-blog-slider\");\r\n//   const nextBtn = document.querySelector(\"#nextBtn\");\r\n//   const previousBtn = document.querySelector(\"#previousBtn\");\r\n//   const slideWidth = slides[0].offsetWidth;\r\n\r\n\r\n//   const computedStyle = window.getComputedStyle(slides[0]);\r\n//   const marginRight = parseInt(computedStyle.marginRight, 10);\r\n//   const totalWidthOfSlide = slideWidth + marginRight;\r\n//   sliderWrapper.style.flexDirection = \"row\";\r\n//   const numSlides = slides.length;\r\n//   let currentSlide = 0;\r\n\r\n//   nextBtn.addEventListener(\"pointerdown\", () => nextSlide(maxSlidesToShow));\r\n//   previousBtn.addEventListener(\"pointerdown\", () =>\r\n//     previousSlide(maxSlidesToShow),\r\n//   );\r\n\r\n//   function previousSlide(maxSlidesToShow) {\r\n//     if (currentSlide > 0) {\r\n//       currentSlide = currentSlide - maxSlidesToShow;\r\n//       gsap.to(sliderWrapper, { x: -currentSlide * totalWidthOfSlide });\r\n//     }\r\n\r\n//     if (currentSlide === 0) {\r\n//       previousBtn.classList.add(\"is--disabled\");\r\n//     }\r\n\r\n//     nextBtn.classList.remove(\"is--disabled\");\r\n//   }\r\n\r\n//   function nextSlide(maxSlidesToShow) {\r\n//     if (currentSlide < numSlides - maxSlidesToShow) {\r\n//       currentSlide = currentSlide + maxSlidesToShow;\r\n//       gsap.to(sliderWrapper, { x: -currentSlide * totalWidthOfSlide });\r\n//     }\r\n\r\n//     if (currentSlide >= numSlides - maxSlidesToShow) {\r\n//       nextBtn.classList.add(\"is--disabled\");\r\n//     }\r\n\r\n//     previousBtn.classList.remove(\"is--disabled\");\r\n//   }\r\n// }\r\n\r\nfunction cardHover() {\r\n  const cards = gsap.utils.toArray(\".collection__item-blog-slider\");\r\n  console.log(cards);\r\n\r\n  cards.forEach((card) => {\r\n    let overlay = card.querySelector(\".black__white-overlay\");\r\n    let badge = card.querySelector(\".blog__tag-w\");\r\n    let title = card.querySelector(\".blog__title\");\r\n    let badgeText = card.querySelector(\".blog__tag-text\");\r\n\r\n    let cardTl = gsap.timeline({\r\n      paused: true,\r\n      defaults: {\r\n        duration: 0.5,\r\n        ease: \"Power2.inOut\", // Using Power2 easing for smoother transitions\r\n      },\r\n    });\r\n\r\n    cardTl\r\n      .fromTo(overlay, { opacity: 1 }, { opacity: 0.2 }, \"<\")\r\n      .fromTo(\r\n        badge,\r\n        { backgroundColor: \"white\" },\r\n        { backgroundColor: \"#121216\", duration: 0.5 },\r\n        \"<\",\r\n      )\r\n      .fromTo(\r\n        badgeText,\r\n        { color: \"#121216\" },\r\n        { color: \"white\", duration: 0.5 },\r\n        \"<\",\r\n      )\r\n      .to(\r\n        title,\r\n        {\r\n          textDecorationColor: \"#0f9\",\r\n          ease: \"Power2.inOut\",\r\n        },\r\n        \"<\",\r\n      );\r\n\r\n    card.addEventListener(\"mouseover\", () => {\r\n      cardTl.timeScale(1).play();\r\n    });\r\n\r\n    card.addEventListener(\"mouseout\", () => {\r\n      cardTl.timeScale(1).reverse();\r\n    });\r\n  });\r\n}\r\n\r\n  function sliderInit() {\r\n    const classPrefix = 'blog'\r\n    addSplideClasses(classPrefix + '__slider')\r\n    const slider = new Splide(sel(`.${classPrefix}__slider`), {\r\n      arrows: false,\r\n      pagination: false,\r\n      gap: '8rem',\r\n      type: 'loop',\r\n      perPage: 3,\r\n      perMove: 3,\r\n      speed: 1500,\r\n      interval: 5000,\r\n      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n      autoplay: 'true',\r\n      intersection: {\r\n        inView: {\r\n          autoplay: true,\r\n        },\r\n        outView: {\r\n          autoplay: false,\r\n        },\r\n      },\r\n      breakpoints: {\r\n        767: {\r\n      perPage: 2,\r\n      perMove: 2,\r\n          autoplay: false,\r\n          gap: '4rem',\r\n        },\r\n        478: {\r\n          autoplay: false,\r\n          perPage: 1,\r\n          perMove: 1,\r\n        },\r\n      },\r\n    })\r\n    slider.mount()\r\n    connectSplideArrows(slider, classPrefix)\r\n  }\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  cardHover();\r\n  let mm = gsap.matchMedia();\r\n\r\n  mm.add(\r\n    {\r\n      isDesktop: \"(min-width: 991px)\",\r\n      isTablet: \"(max-width: 990px) and (min-width: 478px)\",\r\n      isMobile: \"(max-width: 477px)\",\r\n    },\r\n    (context) => {\r\n      let { isDesktop, isTablet, isMobile } = context.conditions;\r\n\r\n      if (isDesktop) {\r\n        // deliverablesSlider(3);\r\n      }\r\n      if (isTablet) {\r\n        // deliverablesSlider(2);\r\n      }\r\n      if (isMobile) {\r\n        // deliverablesSlider(1);\r\n      }\r\n\r\n      return () => {};\r\n    },\r\n  );\r\n});"
        }
    ]
}