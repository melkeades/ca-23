{
    "sourceFile": "_service.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1703081129650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703111173241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,54 @@\n   list.classList.add('splide__list')\r\n   slide.forEach((slide) => slide.classList.add('splide__slide'))\r\n }\r\n \r\n+export function splideAutoWidth(splide){\r\n+  // if not enough logos it will center them and stop the slider\r\n+  const Components = splide.Components\r\n+  // to remove duplicates for inactive/small slider\r\n+  splide.on('overflow', function (isOverflow) {\r\n+    splide.go(0) // Reset the carousel position\r\n+\r\n+    splide.options = {\r\n+      focus: isOverflow ? 'center' : '',\r\n+      drag: isOverflow ? 'free' : false,\r\n+      clones: isOverflow ? undefined : 0, // Toggle clones\r\n+    }\r\n+  })\r\n+  let sliderOverflow = true\r\n+  let sliderReady = false\r\n+  // to center inactive/small slider\r\n+  splide.on('resized', function () {\r\n+    var isOverflow = Components.Layout.isOverflow()\r\n+    sliderOverflow = isOverflow\r\n+    var list = Components.Elements.list\r\n+    var lastSlide = Components.Slides.getAt(splide.length - 1)\r\n+\r\n+    if (lastSlide) {\r\n+      // Toggles `justify-content: center`\r\n+      list.style.justifyContent = isOverflow ? '' : 'center'\r\n+\r\n+      // Remove the last margin\r\n+      if (!isOverflow) {\r\n+        lastSlide.slide.style.marginRight = ''\r\n+      }\r\n+    }\r\n+    if (sliderReady) {\r\n+      s2PlayInit()\r\n+    }\r\n+  })\r\n+  splide.on('mounted', s2PlayInit)\r\n+  function s2PlayInit() {\r\n+    sliderReady = true\r\n+    if (!sliderOverflow) {\r\n+      splide.Components.AutoScroll.pause()\r\n+    } else if (sliderOverflow && splide.Components.AutoScroll.isPaused()) {\r\n+      splide.Components.AutoScroll.play()\r\n+    }\r\n+  }\r\n+}\r\n+\r\n export function onDomReady(run) {\r\n   if (document.readyState !== 'loading') {\r\n     run()\r\n   } else {\r\n"
                },
                {
                    "date": 1703111247657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { AutoScroll } from \"@splidejs/splide-extension-auto-scroll\"\r\n export const sel = (e) => document.querySelector(e)\r\n export const selAll = (e) => document.querySelectorAll(e)\r\n export const vh = (percent) => window.innerHeight * (percent / 100)\r\n export const vw = (percent) => window.innerWidth * (percent / 100)\r\n"
                },
                {
                    "date": 1703111350218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n   function s2PlayInit() {\r\n     sliderReady = true\r\n     if (!sliderOverflow) {\r\n       splide.Components.AutoScroll.pause()\r\n-    } else if (sliderOverflow && splide.Components.AutoScroll.isPaused()) {\r\n+    } else if (sliderOverflow && splide?.Components.AutoScroll.isPaused()) {\r\n       splide.Components.AutoScroll.play()\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1703111361685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n   function s2PlayInit() {\r\n     sliderReady = true\r\n     if (!sliderOverflow) {\r\n       splide.Components.AutoScroll.pause()\r\n-    } else if (sliderOverflow && splide?.Components.AutoScroll.isPaused()) {\r\n+    } else if (sliderOverflow && splide.Components?.AutoScroll.isPaused()) {\r\n       splide.Components.AutoScroll.play()\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1703111414496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n   function s2PlayInit() {\r\n     sliderReady = true\r\n     if (!sliderOverflow) {\r\n       splide.Components.AutoScroll.pause()\r\n-    } else if (sliderOverflow && splide.Components.AutoScroll?.isPaused()) {\r\n+    } else if (sliderOverflow && splide.Components.AutoScroll.isPaused()) {\r\n       splide.Components.AutoScroll.play()\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1703111459072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,10 @@\n   function s2PlayInit() {\r\n     sliderReady = true\r\n     if (!sliderOverflow) {\r\n       splide.Components.AutoScroll.pause()\r\n-    } else if (sliderOverflow && splide.Components.AutoScroll?.isPaused()) {\r\n+    } else if (sliderOverflow && splide.Components.AutoScroll.isPaused()) {\r\n+    // } else if (sliderOverflow && splide.Components.AutoScroll?.isPaused()) {\r\n       splide.Components.AutoScroll.play()\r\n     }\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1703081129650,
            "name": "Commit-0",
            "content": "\r\nexport const sel = (e) => document.querySelector(e)\r\nexport const selAll = (e) => document.querySelectorAll(e)\r\nexport const vh = (percent) => window.innerHeight * (percent / 100)\r\nexport const vw = (percent) => window.innerWidth * (percent / 100)\r\n\r\nexport function debounce(func, time = 100) {\r\n  let timer\r\n  return function (event) {\r\n    if (timer) clearTimeout(timer)\r\n    timer = setTimeout(func, time, event)\r\n  }\r\n}\r\nexport function devMode(mode) {\r\n  if (mode === 0) {\r\n    return\r\n  } else if (mode === 1) {\r\n    let i = 0\r\n    document.querySelectorAll('[data-video-urls]').forEach((el) => {\r\n      el.querySelector('video').remove()\r\n      i++\r\n    })\r\n    console.log('devMode, removed videos:', i)\r\n  } else if (mode === 2) {\r\n    const devRemoveList = []\r\n    // const devRemoveList = [videoHero$, introSec$, aboutSec$]\r\n    devRemoveList.forEach((el) => {\r\n      el.remove()\r\n    })\r\n    console.log('devMode: removing sections')\r\n  }\r\n}\r\n\r\nexport function removeSplideClasses(slider) {\r\n  const splide = document.querySelector('.' + slider)\r\n  const track = splide.querySelector('.splide__track')\r\n  const list = splide.querySelector('.splide__list')\r\n  const slide = splide.querySelectorAll('.splide__slide')\r\n  splide.classList.remove('splide')\r\n  track.classList.remove('splide__track')\r\n  list.classList.remove('splide__list')\r\n  slide.forEach((slide) => slide.classList.remove('splide__slide'))\r\n}\r\nexport function addSplideClasses(slider) {\r\n  const splide = document.querySelector('.' + slider)\r\n  const track = splide.children[0]\r\n  const list = track.children[0]\r\n  const slide = list.childNodes\r\n  splide.classList.add('splide')\r\n  track.classList.add('splide__track')\r\n  list.classList.add('splide__list')\r\n  slide.forEach((slide) => slide.classList.add('splide__slide'))\r\n}\r\n\r\nexport function onDomReady(run) {\r\n  if (document.readyState !== 'loading') {\r\n    run()\r\n  } else {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      run()\r\n    })\r\n  }\r\n}\r\n"
        }
    ]
}